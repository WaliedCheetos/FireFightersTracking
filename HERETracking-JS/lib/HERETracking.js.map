{"version":3,"sources":["webpack://HERETracking/webpack/universalModuleDefinition","webpack://HERETracking/webpack/bootstrap","webpack://HERETracking/../node_modules/crypto-js/aes.js","webpack://HERETracking/../node_modules/crypto-js/cipher-core.js","webpack://HERETracking/../node_modules/crypto-js/core.js","webpack://HERETracking/../node_modules/crypto-js/enc-base64.js","webpack://HERETracking/../node_modules/crypto-js/enc-utf16.js","webpack://HERETracking/../node_modules/crypto-js/evpkdf.js","webpack://HERETracking/../node_modules/crypto-js/format-hex.js","webpack://HERETracking/../node_modules/crypto-js/hmac.js","webpack://HERETracking/../node_modules/crypto-js/index.js","webpack://HERETracking/../node_modules/crypto-js/lib-typedarrays.js","webpack://HERETracking/../node_modules/crypto-js/md5.js","webpack://HERETracking/../node_modules/crypto-js/mode-cfb.js","webpack://HERETracking/../node_modules/crypto-js/mode-ctr-gladman.js","webpack://HERETracking/../node_modules/crypto-js/mode-ctr.js","webpack://HERETracking/../node_modules/crypto-js/mode-ecb.js","webpack://HERETracking/../node_modules/crypto-js/mode-ofb.js","webpack://HERETracking/../node_modules/crypto-js/pad-ansix923.js","webpack://HERETracking/../node_modules/crypto-js/pad-iso10126.js","webpack://HERETracking/../node_modules/crypto-js/pad-iso97971.js","webpack://HERETracking/../node_modules/crypto-js/pad-nopadding.js","webpack://HERETracking/../node_modules/crypto-js/pad-zeropadding.js","webpack://HERETracking/../node_modules/crypto-js/pbkdf2.js","webpack://HERETracking/../node_modules/crypto-js/rabbit-legacy.js","webpack://HERETracking/../node_modules/crypto-js/rabbit.js","webpack://HERETracking/../node_modules/crypto-js/rc4.js","webpack://HERETracking/../node_modules/crypto-js/ripemd160.js","webpack://HERETracking/../node_modules/crypto-js/sha1.js","webpack://HERETracking/../node_modules/crypto-js/sha224.js","webpack://HERETracking/../node_modules/crypto-js/sha256.js","webpack://HERETracking/../node_modules/crypto-js/sha3.js","webpack://HERETracking/../node_modules/crypto-js/sha384.js","webpack://HERETracking/../node_modules/crypto-js/sha512.js","webpack://HERETracking/../node_modules/crypto-js/tripledes.js","webpack://HERETracking/../node_modules/crypto-js/x64-core.js","webpack://HERETracking/../node_modules/oauth-1.0a/oauth-1.0a.js","webpack://HERETracking/./aliases.js","webpack://HERETracking/./associations.js","webpack://HERETracking/./device.js","webpack://HERETracking/./devices.js","webpack://HERETracking/./events.js","webpack://HERETracking/./geofences.js","webpack://HERETracking/./index.js","webpack://HERETracking/./journeys.js","webpack://HERETracking/./messages.js","webpack://HERETracking/./metadata.js","webpack://HERETracking/./notifications.js","webpack://HERETracking/./rules.js","webpack://HERETracking/./shadows.js","webpack://HERETracking/./traces.js","webpack://HERETracking/./transitions.js","webpack://HERETracking/./users.js","webpack://HERETracking/./vendor.js"],"names":["Aliases","utils","url","validate","fetch","normaliseId","idOrObject","token","count","pageToken","type","then","trackingId","queryParameters","credentials","headers","Headers","method","after","externalId","module","exports","Associations","ruleId","OAuth","require","CryptoJS","Device","deviceId","deviceSecret","oauth","consumer","key","secret","parameter_seperator","hash_function","baseString","enc","Base64","stringify","HmacSHA256","oauthParameters","oauth_consumer_key","oauth_nonce","generateNonce","oauth_timestamp","Math","floor","Date","oauth_signature_method","oauth_version","oauthSignature","authorize","data","toHeader","telemetry","body","Array","isArray","JSON","length","text","possible","i","charAt","random","Devices","ownerAppId","Events","timestamp","atLeastOneOf","Geofences","geofenceId","geofence","fields","Object","keys","indexOf","Promise","reject","Error","id","missing","filter","x","join","really","Vendor","Notifications","Shadows","Traces","Transitions","Journeys","Users","Metadata","Rules","Messages","v4","RegExp","HERETracking","_hosts","_name","_environment","_host","_correlationId","_projectId","bind","options","handleErrors","response","contentType","get","json","geofences","device","devices","vendor","claim","notifications","shadows","transitions","journeys","traces","users","aliases","metadata","rules","events","associations","queryParams","projectId","args","params","pop","pathname","match","substr","query","serialize","env","TypeError","obj","str","forEach","push","encodeURIComponent","ok","appId","requiredKeys","map","Boolean","errorMessages","resolve","errors","check","Templates","pageSize","pageIndex","likeName","name","Number","isInteger","templateId","description","checkpoints","adhoc","jorTempDesc","jorTempAdhoc","jorTempExtUid","templateJson","Instances","journeyId","checkupTs","detailed","controlled","autoStart","jorTempId","jorExtUid","trackerUid","jorControlled","instanceJson","Stats","templates","checkpointTypes","assets","statusId","fromTs","toTs","ranges","minDelayS","maxDelayS","Checkpoints","checkpointId","checkpoint","checkpointBody","cpTypeId","cpDesc","cpExtUid","externalIdType","info","infoObj","cpTypeName","cpTypeExtUid","typeId","stats","instances","userAccountId","n","givenName","familyName","email","vendorId","requestId","value","channel","channelName","SENSOR_TYPES","range","threshold","includes","begin","end","trackingIds","getByState","state","selector","desired","shadow","payload","system","last","before","password","accessToken","refreshToken","licenses","start","startIndex","endIndex","role","Authorization","projects","total","getProjectsPage","concat","prj","claimDevice","jobId","batchTimeout","checkBatchStatus","status","getBatchResults","setTimeout","waitForBatchResults","requestBatch","result","provision"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,6DAAc,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,+DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,mBAAmB;AACtD;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACvOD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,qDAAU;AAC1E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,8EAA8E,kBAAkB;AAChG;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,wGAAwG,kBAAkB;AAC1H;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,mBAAmB,UAAU;AAC7B,mBAAmB,UAAU;AAC7B,mBAAmB,UAAU;AAC7B,mBAAmB,OAAO;AAC1B,mBAAmB,KAAK;AACxB,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,qCAAqC;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,iHAAiH,SAAS;AAC1H,iHAAiH,0CAA0C;AAC3J;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,oBAAoB;AACxC,oBAAoB,UAAU;AAC9B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA,sHAAsH,0CAA0C;AAChK,mHAAmH,0CAA0C;AAC7J;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,4BAA4B;;AAElE;AACA;AACA;;AAEA;AACA,yCAAyC,+BAA+B;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH,kCAAkC;AAC3J;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,oBAAoB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA,8HAA8H,kCAAkC;AAChK,2HAA2H,kCAAkC;AAC7J;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN,EAAE;;;AAGF,CAAC,G;;;;;;;;;;;AC/2BD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA;AACA;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,oCAAoC,YAAY;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACvvBD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;;AAEA,gCAAgC,sCAAsC;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACtID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACpJD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,iDAAQ;AAC3F;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE,uDAAuD,+BAA+B;AACtF;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC,gBAAgB,OAAO;AACvB;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE,uDAAuD,+BAA+B;AACtF;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACnID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,+DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACjED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,EAAE;;;AAGF,CAAC,G;;;;;;;;;;;AC9ID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,yDAAY,GAAG,mBAAO,CAAC,uEAAmB,GAAG,mBAAO,CAAC,2DAAa,GAAG,mBAAO,CAAC,6DAAc,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,2DAAa,GAAG,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,+DAAe,GAAG,mBAAO,CAAC,yDAAY,GAAG,mBAAO,CAAC,yDAAY,GAAG,mBAAO,CAAC,yEAAoB,GAAG,mBAAO,CAAC,yDAAY,GAAG,mBAAO,CAAC,yDAAY,GAAG,mBAAO,CAAC,iEAAgB,GAAG,mBAAO,CAAC,iEAAgB,GAAG,mBAAO,CAAC,iEAAgB,GAAG,mBAAO,CAAC,uEAAmB,GAAG,mBAAO,CAAC,mEAAiB,GAAG,mBAAO,CAAC,6DAAc,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,2DAAa,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,mEAAiB;AAClyB;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;;AAEA,CAAC,G;;;;;;;;;;;ACjBD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC3ED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC3QD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,+DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC7ED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,+DAAe;AAC/E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA,E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C9B,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE,uDAAuD,+BAA+B;AACtF;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC,oBAAoB,iBAAiB;AACrC;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC,gBAAgB,OAAO;AACvB;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE,uDAAuD,+BAA+B;AACtF;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AChJD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,6DAAc,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,+DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC7LD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,6DAAc,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,+DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC/LD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,6DAAc,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,+DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC1ID,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;;AAEA,kdAAkd,+BAA+B;AACjf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC1QD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACrJD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,qDAAU;AAC1E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC/ED,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACtMD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,yDAAY;AAC5E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,OAAO;AAC/B,4BAA4B,OAAO;AACnC;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;;AAEA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AClUD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,yDAAY,GAAG,mBAAO,CAAC,qDAAU;AACjG;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AClFD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,yDAAY;AAC5E;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,QAAQ;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;;AAEV;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA,MAAM;;AAEN;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AClUD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ,GAAG,mBAAO,CAAC,6DAAc,GAAG,mBAAO,CAAC,+CAAO,GAAG,mBAAO,CAAC,qDAAU,GAAG,mBAAO,CAAC,+DAAe;AAC/I;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;ACjwBD,CAAC;AACD,KAAK,IAA2B;AAChC;AACA,qCAAqC,mBAAO,CAAC,iDAAQ;AACrD;AACA,MAAM,EAOJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;;AAEA;AACA,UAAU;;AAEV;AACA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;;AAEA;AACA;AACA,MAAM;AACN,EAAE;;;AAGF;;AAEA,CAAC,G;;;;;;;;;;;AC/SD,IAAI,IAAiE;AACrE;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA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","file":"HERETracking.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"HERETracking\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HERETracking\"] = factory();\n\telse\n\t\troot[\"HERETracking\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                var block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                var block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                var modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                var modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                var wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                var block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            var keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            var keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t            i--;\n\t        }\n\t        data.sigBytes = i + 1;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    var Wil = gamma0l + Wi7l;\n\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + gamma1l;\n\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + Wi16l;\n\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));","if (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined') {\n    module.exports = OAuth;\n}\n\n/**\n * Constructor\n * @param {Object} opts consumer key and secret\n */\nfunction OAuth(opts) {\n    if(!(this instanceof OAuth)) {\n        return new OAuth(opts);\n    }\n\n    if(!opts) {\n        opts = {};\n    }\n\n    if(!opts.consumer) {\n        throw new Error('consumer option is required');\n    }\n\n    this.consumer            = opts.consumer;\n    this.nonce_length        = opts.nonce_length || 32;\n    this.version             = opts.version || '1.0';\n    this.parameter_seperator = opts.parameter_seperator || ', ';\n    this.realm               = opts.realm;\n\n    if(typeof opts.last_ampersand === 'undefined') {\n        this.last_ampersand = true;\n    } else {\n        this.last_ampersand = opts.last_ampersand;\n    }\n\n    // default signature_method is 'PLAINTEXT'\n    this.signature_method = opts.signature_method || 'PLAINTEXT';\n\n    if(this.signature_method == 'PLAINTEXT' && !opts.hash_function) {\n        opts.hash_function = function(base_string, key) {\n            return key;\n        }\n    }\n\n    if(!opts.hash_function) {\n        throw new Error('hash_function option is required');\n    }\n\n    this.hash_function = opts.hash_function;\n    this.body_hash_function = opts.body_hash_function || this.hash_function;\n}\n\n/**\n * OAuth request authorize\n * @param  {Object} request data\n * {\n *     method,\n *     url,\n *     data\n * }\n * @param  {Object} key and secret token\n * @return {Object} OAuth Authorized data\n */\nOAuth.prototype.authorize = function(request, token) {\n    var oauth_data = {\n        oauth_consumer_key: this.consumer.key,\n        oauth_nonce: this.getNonce(),\n        oauth_signature_method: this.signature_method,\n        oauth_timestamp: this.getTimeStamp(),\n        oauth_version: this.version\n    };\n\n    if(!token) {\n        token = {};\n    }\n\n    if(token.key !== undefined) {\n        oauth_data.oauth_token = token.key;\n    }\n\n    if(!request.data) {\n        request.data = {};\n    }\n\n    if(request.includeBodyHash) {\n      oauth_data.oauth_body_hash = this.getBodyHash(request, token.secret)\n    }\n\n    oauth_data.oauth_signature = this.getSignature(request, token.secret, oauth_data);\n\n    return oauth_data;\n};\n\n/**\n * Create a OAuth Signature\n * @param  {Object} request data\n * @param  {Object} token_secret key and secret token\n * @param  {Object} oauth_data   OAuth data\n * @return {String} Signature\n */\nOAuth.prototype.getSignature = function(request, token_secret, oauth_data) {\n    return this.hash_function(this.getBaseString(request, oauth_data), this.getSigningKey(token_secret));\n};\n\n/**\n * Create a OAuth Body Hash\n * @param {Object} request data\n */\nOAuth.prototype.getBodyHash = function(request, token_secret) {\n  var body = typeof request.data === 'string' ? request.data : JSON.stringify(request.data)\n\n  if (!this.body_hash_function) {\n    throw new Error('body_hash_function option is required');\n  }\n\n  return this.body_hash_function(body, this.getSigningKey(token_secret))\n};\n\n/**\n * Base String = Method + Base Url + ParameterString\n * @param  {Object} request data\n * @param  {Object} OAuth data\n * @return {String} Base String\n */\nOAuth.prototype.getBaseString = function(request, oauth_data) {\n    return request.method.toUpperCase() + '&' + this.percentEncode(this.getBaseUrl(request.url)) + '&' + this.percentEncode(this.getParameterString(request, oauth_data));\n};\n\n/**\n * Get data from url\n * -> merge with oauth data\n * -> percent encode key & value\n * -> sort\n *\n * @param  {Object} request data\n * @param  {Object} OAuth data\n * @return {Object} Parameter string data\n */\nOAuth.prototype.getParameterString = function(request, oauth_data) {\n    var base_string_data;\n    if (oauth_data.oauth_body_hash) {\n        base_string_data = this.sortObject(this.percentEncodeData(this.mergeObject(oauth_data, this.deParamUrl(request.url))));\n    } else {\n        base_string_data = this.sortObject(this.percentEncodeData(this.mergeObject(oauth_data, this.mergeObject(request.data, this.deParamUrl(request.url)))));\n    }\n\n    var data_str = '';\n\n    //base_string_data to string\n    for(var i = 0; i < base_string_data.length; i++) {\n        var key = base_string_data[i].key;\n        var value = base_string_data[i].value;\n        // check if the value is an array\n        // this means that this key has multiple values\n        if (value && Array.isArray(value)){\n          // sort the array first\n          value.sort();\n\n          var valString = \"\";\n          // serialize all values for this key: e.g. formkey=formvalue1&formkey=formvalue2\n          value.forEach((function(item, i){\n            valString += key + '=' + item;\n            if (i < value.length){\n              valString += \"&\";\n            }\n          }).bind(this));\n          data_str += valString;\n        } else {\n          data_str += key + '=' + value + '&';\n        }\n    }\n\n    //remove the last character\n    data_str = data_str.substr(0, data_str.length - 1);\n    return data_str;\n};\n\n/**\n * Create a Signing Key\n * @param  {String} token_secret Secret Token\n * @return {String} Signing Key\n */\nOAuth.prototype.getSigningKey = function(token_secret) {\n    token_secret = token_secret || '';\n\n    if(!this.last_ampersand && !token_secret) {\n        return this.percentEncode(this.consumer.secret);\n    }\n\n    return this.percentEncode(this.consumer.secret) + '&' + this.percentEncode(token_secret);\n};\n\n/**\n * Get base url\n * @param  {String} url\n * @return {String}\n */\nOAuth.prototype.getBaseUrl = function(url) {\n    return url.split('?')[0];\n};\n\n/**\n * Get data from String\n * @param  {String} string\n * @return {Object}\n */\nOAuth.prototype.deParam = function(string) {\n    var arr = string.split('&');\n    var data = {};\n\n    for(var i = 0; i < arr.length; i++) {\n        var item = arr[i].split('=');\n\n        // '' value\n        item[1] = item[1] || '';\n\n        // check if the key already exists\n        // this can occur if the QS part of the url contains duplicate keys like this: ?formkey=formvalue1&formkey=formvalue2\n        if (data[item[0]]){\n          // the key exists already\n          if (!Array.isArray(data[item[0]])) {\n            // replace the value with an array containing the already present value\n            data[item[0]] = [data[item[0]]];\n          }\n          // and add the new found value to it\n          data[item[0]].push(decodeURIComponent(item[1]));\n        } else {\n          // it doesn't exist, just put the found value in the data object\n          data[item[0]] = decodeURIComponent(item[1]);\n        }\n    }\n\n    return data;\n};\n\n/**\n * Get data from url\n * @param  {String} url\n * @return {Object}\n */\nOAuth.prototype.deParamUrl = function(url) {\n    var tmp = url.split('?');\n\n    if (tmp.length === 1)\n        return {};\n\n    return this.deParam(tmp[1]);\n};\n\n/**\n * Percent Encode\n * @param  {String} str\n * @return {String} percent encoded string\n */\nOAuth.prototype.percentEncode = function(str) {\n    return encodeURIComponent(str)\n        .replace(/\\!/g, \"%21\")\n        .replace(/\\*/g, \"%2A\")\n        .replace(/\\'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\");\n};\n\n/**\n * Percent Encode Object\n * @param  {Object} data\n * @return {Object} percent encoded data\n */\nOAuth.prototype.percentEncodeData = function(data) {\n    var result = {};\n\n    for(var key in data) {\n        var value = data[key];\n        // check if the value is an array\n        if (value && Array.isArray(value)){\n          var newValue = [];\n          // percentEncode every value\n          value.forEach((function(val){\n            newValue.push(this.percentEncode(val));\n          }).bind(this));\n          value = newValue;\n        } else {\n          value = this.percentEncode(value);\n        }\n        result[this.percentEncode(key)] = value;\n    }\n\n    return result;\n};\n\n/**\n * Get OAuth data as Header\n * @param  {Object} oauth_data\n * @return {String} Header data key - value\n */\nOAuth.prototype.toHeader = function(oauth_data) {\n    var sorted = this.sortObject(oauth_data);\n\n    var header_value = 'OAuth ';\n\n    if (this.realm) {\n        header_value += 'realm=\"' + this.realm + '\"' + this.parameter_seperator;\n    }\n\n    for(var i = 0; i < sorted.length; i++) {\n        if (sorted[i].key.indexOf('oauth_') !== 0)\n            continue;\n\n        header_value += this.percentEncode(sorted[i].key) + '=\"' + this.percentEncode(sorted[i].value) + '\"' + this.parameter_seperator;\n    }\n\n    return {\n        Authorization: header_value.substr(0, header_value.length - this.parameter_seperator.length) //cut the last chars\n    };\n};\n\n/**\n * Create a random word characters string with input length\n * @return {String} a random word characters string\n */\nOAuth.prototype.getNonce = function() {\n    var word_characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    var result = '';\n\n    for(var i = 0; i < this.nonce_length; i++) {\n        result += word_characters[parseInt(Math.random() * word_characters.length, 10)];\n    }\n\n    return result;\n};\n\n/**\n * Get Current Unix TimeStamp\n * @return {Int} current unix timestamp\n */\nOAuth.prototype.getTimeStamp = function() {\n    return parseInt(new Date().getTime()/1000, 10);\n};\n\n////////////////////// HELPER FUNCTIONS //////////////////////\n\n/**\n * Merge object\n * @param  {Object} obj1\n * @param  {Object} obj2\n * @return {Object}\n */\nOAuth.prototype.mergeObject = function(obj1, obj2) {\n    obj1 = obj1 || {};\n    obj2 = obj2 || {};\n\n    var merged_obj = obj1;\n    for(var key in obj2) {\n        merged_obj[key] = obj2[key];\n    }\n    return merged_obj;\n};\n\n/**\n * Sort object by key\n * @param  {Object} data\n * @return {Array} sorted array\n */\nOAuth.prototype.sortObject = function(data) {\n    var keys = Object.keys(data);\n    var result = [];\n\n    keys.sort();\n\n    for(var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        result.push({\n            key: key,\n            value: data[key],\n        });\n    }\n\n    return result;\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Provide a trackingId and retrieve aliases associated with it.\n * Be able to search within aliases for associated trackers.\n *\n * A tracker often has to be associated with an external system in a way that is\n * neither part of the reported state of the device or the desired state – attaching\n * a tracker to a particular engine part or palette; assigning a human-readable name;\n * synchronizing with an external asset management system. This service allows the\n * association of arbitrary type-externalId pairs with a trackingId as well as the ability to\n * search across those type-externalId pairs to find the containing trackingIds. External Id\n * and type pair must be unique within an account.\n *\n */\n\nclass Aliases {\n\n  /**\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   * @param {function(trackingId: string): Object} utils.normaliseId - Allow methods to be called using trackingId or\n   * externalId/appId object\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} generate URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n    /**\n     * Allow methods to be called using trackingId or externalId/appId object\n     * @type {function(trackingId: string): Object}\n     */\n    this.normaliseId = utils.normaliseId;\n  }\n\n  /**\n   * Gets all aliases of this device.\n   *\n   * The identifier can be a trackingId or an object with externalId and appId\n   *\n   * Example:\n   *\n   *.   \"HERE-1234-1234-1234\"\n   *\n   * or:\n   *\n   *.   {\n   *.     \"externalId\": '123-abc',\n   *.     \"appId\": \"a1b2c3\"\n   *.   }\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @param {string} options.type - Type of an externalId (alias).\n   * @returns {Object} Provides all aliases in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  get(idOrObject, { token, count, pageToken, type }) {\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n\n        if (count) { queryParameters.count = count; }\n        if (pageToken) { queryParameters.pageToken = pageToken; }\n        if (type) { queryParameters.type = type; }\n\n        const url = this.url('aliases', 'v2', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Deletes all aliases of this device.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Provides all aliases in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  delete(idOrObject, { token }) {\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('aliases', 'v2', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'x-confirm': 'true',\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Gets all aliases of all devices.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.type - Type of an externalId (alias)\n   * @param {string} options.pageToken - Token to request 'next page' when paging\n   * @param {string} options.token - Valid user access token\n   * @param {number} options.count - The number of items to return per page (maximum 100, default 100)\n   * @param {number} options.after - Milliseconds elapsed since 1 January 1970 00:00:00 UTC\n   * The accepted range is from 0 to the current time\n   * @returns {Object} Provides all aliases in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getAll({ type, pageToken, count, after, token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (type) queryParameters.type = type;\n        if (pageToken) queryParameters.pageToken = pageToken;\n        if (count) queryParameters.count = count;\n        if (after) queryParameters.after = after;\n\n        const url = this.url('aliases', 'v2', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Gets all aliases of a particular type for this device.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {string} type - type of alias to retrieve\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Object} Provides all aliases in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getByType(idOrObject, type, { token, count, pageToken }) {\n    return this.validate({ token, idOrObject, type }, ['token', 'idOrObject', 'type'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n\n        if (count) { queryParameters.count = count; }\n        if (pageToken) { queryParameters.pageToken = pageToken; }\n\n        const url = this.url('aliases', 'v2', trackingId, type, queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Deletes all aliases of a type\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {string} type - type of aliases to delete\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Empty response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  deleteByType(idOrObject, type, { token }) {\n    return this.validate({ token, idOrObject, type }, ['token', 'idOrObject', 'type'])\n      .then(() => {\n        const { trackingId } = this.normaliseId(idOrObject);\n\n        const url = this.url('aliases', 'v2', trackingId, type);\n\n        return this.fetch(url, {\n          method: 'delete',\n          credentials: 'include',\n          headers: new Headers({\n            'x-confirm': 'true',\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Gets the HERE trackingId of a device given its externalId and externalId type\n   *\n   * @param {string} type - type of alias\n   * @param {string} externalId - external ID to look up\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} A JSON object containing the trackingId\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getTrackingId(type, externalId, { token }) {\n    return this.validate({ type, externalId }, ['token', 'type', 'externalId'])\n      .then(() => {\n        const queryParameters = {\n          type, externalId\n        };\n\n        const url = this.url('aliases', 'v2', 'trackingId', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Adds an alias for the trackingId. Must be unique within account.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {string} type - type of alias\n   * @param {string} externalId - external ID to add\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Empty response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  add(idOrObject, type, externalId, { token }) {\n    return this.validate({ idOrObject, type, externalId }, ['idOrObject', 'token', 'type', 'externalId'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('aliases', 'v2', trackingId, type, externalId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'put',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Deletes a specific alias for the trackingId.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {string} type - type of alias\n   * @param {string} externalId - external ID to add\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Empty response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  deleteOne(idOrObject, type, externalId, { token }) {\n    return this.validate({ idOrObject, type, externalId }, ['idOrObject', 'token', 'type', 'externalId'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('aliases', 'v2', trackingId, type, externalId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'delete',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n}\n\nmodule.exports = Aliases;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Manage associations between devices and other entities\n *\n */\n\nclass Associations {\n\n  /**\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   * @param {function(trackingId: string): Object} utils.normaliseId - Allow methods to be called using trackingId or\n   * externalId/appId object\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} generate URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Associate a rule with a device\n   *\n   * @param {string} ruleId - ID of rule\n   * @param {string} trackingId - ID of device\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the transition response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  associateRuleWithDevice(ruleId, trackingId, { token }) {\n    return this.validate({ ruleId, trackingId, token }, ['ruleId', 'trackingId', 'token'])\n      .then(() => this.fetch(this.url('associations', 'v3', trackingId, 'sensors', ruleId), {\n        method: 'put',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n  /**\n   * Remove a rule/device association\n   *\n   * @param {string} ruleId - ID of rule\n   * @param {string} trackingId - ID of device\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the transition response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  removeRuleFromDevice(ruleId, trackingId, { token }) {\n    return this.validate({ ruleId, trackingId, token }, ['ruleId', 'trackingId', 'token'])\n      .then(() => this.fetch(this.url('associations', 'v3', trackingId, 'sensors', ruleId), {\n        method: 'delete',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n  /**\n   * List the rules associated to this device.\n   *\n   * @param {string} trackingId - ID of tracker\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} [options.count] - Number of rules returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @returns {Object} Body of the rules response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  listDeviceRules(trackingId, { count, pageToken, token }) {\n    return this.validate({ trackingId, token }, ['trackingId', 'token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('associations', 'v3', trackingId, 'sensors', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * List the rules associated to this device.\n   *\n   * @param {string} ruleId - ID of the rule we want information about\n   * @param {Object} options - Object containing request options\n   * @param {number} [options.count] - Number of rules returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the rules response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  listRuleDevices(ruleId, { count, pageToken, token }) {\n    return this.validate({ ruleId, token }, ['ruleId', 'token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('associations', 'v3', 'sensors', ruleId, queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n}\n\nmodule.exports = Associations;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n */\n\nconst OAuth = require('oauth-1.0a');\nconst CryptoJS = require('crypto-js');\n\n/**\n * Device sender interface\n *\n * This class handles authenticating device credentials and sending telemetry to\n * HERE Tracking. It can be used to create a virtual device.\n *\n * For more information, see:\n * https://developer.here.com/documentation/tracking/topics/devices.html\n *\n */\nclass Device {\n\n  /**\n   * Create a virtual device\n   *\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} generate URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Generate a one-time string for the OAuth 1.0 login\n   *\n   * *NOTE: The generated nonce will be different every time this method is called\n   *\n   * @example\n   * hereTracking.device.generateNonce(6)\n   * > a9fWF4\n   *\n   * @param {number} length - Desired length of the nonce\n   * @returns {string} Generated nonce\n   */\n  static generateNonce(length) {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  /**\n   * Log in the device\n   *\n   * Request a device token from HERE Tracking\n   *\n   * @example\n   * hereTracking.device.login('878be51a-6e27-4484-811e-example', '39d-f44e8c56f515/example3is-F')\n   * > { token: 'h1.1234...'}\n   *\n   * @param {string} deviceId - Valid device ID\n   * @param {string} deviceSecret - Valid device secret\n   * @returns {Object} Valid accessToken for this device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  login(deviceId, deviceSecret) {\n    return this.validate({ deviceId, deviceSecret }, ['deviceId', 'deviceSecret'])\n      .then(() => {\n\n        /* eslint-disable camelcase */\n        const oauth = OAuth({\n          consumer: { key: deviceId, secret: deviceSecret },\n          parameter_seperator: ',',\n          hash_function(baseString, key) {\n            return CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(baseString, key));\n          }\n        });\n\n        // request token from device-http\n        const oauthParameters = {\n          oauth_consumer_key: deviceId,\n          oauth_nonce: Device.generateNonce(6),\n          oauth_timestamp: Math.floor(+new Date() / 1E3),\n          oauth_signature_method: 'HMAC-SHA256',\n          oauth_version: '1.0'\n        };\n\n        const oauthSignature = oauth.authorize({\n          url: this.url('v2', 'token'),\n          method: 'POST',\n          data: oauthParameters\n        });\n\n        return this.fetch(this.url('v2', 'token'), {\n          method: 'post',\n          headers: new Headers(oauth.toHeader(oauthSignature))\n        });\n        /* eslint-enable camelcase */\n      });\n  }\n\n  /**\n   * Send telemetry\n   *\n   * Position Object example (see documentation for more detail)\n   *\n   *```\n   *    {\n   *      \"lat\": 55.9535,\n   *      \"lng\": -3.1939,\n   *      \"alt\": 81\n   *    }\n   *```\n   *\n   * @example\n   * hereTracking.device.send({lat: 55.9535,lng: -3.1939,alt: 81}, { token: 'h1.1234...'})\n   *\n   * @param {Object} telemetry - Device telemetry\n   * @param {Object} [telemetry.position] - Standard position object\n   * @param {Object} [telemetry.payload] - Telemetry payload (arbitrary JSON)\n   * @param {Object} [telemetry.scan] - WiFi Scan payload\n   * @param {Object} [telemetry.timestamp] - Time of sample\n   * @param {Object} requestOptions - Object containing method options\n   * @param {string} requestoptions.token - Valid device token\n   * @param {string} [requestOptions.deviceId] - Valid device ID. If not provided,\n   * the deviceId from the last `.login()` call is used\n   *\n   * @returns {Object} Successful telemetry response object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  send(telemetry, { token, deviceId }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n\n        const body = Array.isArray(telemetry) ? telemetry : [telemetry];\n\n        return this.fetch(this.url('device-http', 'v2'), {\n          method: 'post',\n          credentials: 'include',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(body)\n        });\n      });\n  }\n}\n\nmodule.exports = Device;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Device management interfaces.\n *\n * This class handles device claiming and unclaiming as well as mapping deviceId to trackingID and vice versa.\n *\n */\nclass Devices {\n\n  /**\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} Generate the URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Claim a device. Bind a new device to a user.\n   * /registry/v2/devices/{deviceId}\n   *\n   * @example\n   * hereTracking.devices.claim('c0ba6127-e3ba-4518-ada1-ef4274836bd1', { token: 'h1.123...' })\n   * {\n   *   \"trackingId\": \"HERE-3e8b0d78-2fef-4644-a214-49c9c332637c\"\n   * }\n   *\n   * @param {string} deviceId - UUID of the device\n   * @param {Object} options - Object containing method options\n   * @param {string} options.token - Valid user access token\n   * @param {string} [options.ownerAppId] - Application identifier which\n   * specifies device owner's application to which the device is associated with\n   * @returns {Object} Body of the claim response. Contains the new trackingId\n   * @throws {Error} When an HTTP error has occurred\n   */\n  claim(deviceId, { token, ownerAppId }) {\n    let body;\n\n    if (ownerAppId) {\n      body = JSON.stringify({ ownerAppId });\n    }\n\n    return this.validate({ token, deviceId }, ['token', 'deviceId'])\n      .then(() => this.fetch(this.url('registry', 'v2', 'devices', deviceId), {\n        method: 'put',\n        headers: new Headers({\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }),\n        body\n      }));\n  }\n\n  /**\n   * Unclaim a device. Unbind a trackingId from a user.\n   * /registry/v2/{trackingId}\n   *\n   * @example\n   * hereTracking.devices.unclaim('HERE-3e8b0d78-2fef-4644-a214-49c9c332637c', { token: 'h1.123...' })\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {Object} options - Object containing method options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the unclaim response.\n   * @throws {Error} When an HTTP error has occurred\n   */\n  unclaim(trackingId, { token }) {\n    return this.validate({ token, trackingId }, ['token', 'trackingId'])\n      .then(() => this.fetch(\n        this.url('registry', 'v2', trackingId), {\n          method: 'delete',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        }));\n  }\n\n  /**\n   * Get Tracking ID given a Device ID\n   * /registry/v2/devices/{deviceId}\n   *\n   * @example\n   * hereTracking.devices.trackingId('c0ba6127-e3ba-4518-ada1-ef4274836bd1', { token: 'h1.123...' })\n   * {\n   *   \"trackingId\": \"HERE-3e8b0d78-2fef-4644-a214-49c9c332637c\"\n   * }\n   *\n   * @param {string} deviceId - Device ID of the device\n   * @param {Object} options - Object containing method options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body containing the Tracking ID\n   * @throws {Error} When an HTTP error has occurred\n   */\n  trackingId(deviceId, { token }) {\n    return this.validate({ deviceId, token }, ['deviceId', 'token'])\n      .then(() => this.fetch(\n        this.url('registry', 'v2', 'devices', deviceId), {\n          method: 'get',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        }));\n  }\n\n  /**\n   * Get Device ID given a Tracking ID\n   * /registry/v2/{trackingId}\n   *\n   * @example\n   * hereTracking.devices.deviceId('HERE-3e8b0d78-2fef-4644-a214-49c9c332637c', { token: 'h1.123...' })\n   * {\n   *   \"deviceId\": \"c0ba6127-e3ba-4518-ada1-ef4274836bd1\"\n   * }\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {Object} options - Object containing method options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body containing the Tracking ID\n   * @throws {Error} When an HTTP error has occurred\n   */\n  deviceId(trackingId, { token }) {\n    return this.validate({ trackingId, token }, ['trackingId', 'token'])\n      .then(() => this.fetch(\n        this.url('registry', 'v2', trackingId), {\n          method: 'get',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        }));\n  }\n\n  /**\n   * Get the geofences associated with a device.\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @param {number} [options.count] - Number of geofences returned per page\n   * @returns {Object} Body of the geofence response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getGeofences(trackingId, { token, count, pageToken }) {\n    return this.validate({ trackingId, token }, ['trackingId', 'token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('device-associations', 'v2', trackingId,\n          'geofences', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n}\n\nmodule.exports = Devices;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * View details about events created by devices and rules\n *\n * This class handles device claiming and unclaiming as well as mapping deviceId to trackingID and vice versa.\n *\n */\nclass Events {\n\n  /**\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} Generate the URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * List all events available to the user.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} [options.count] - Number of rules returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @returns {Object} Body of the rules response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  list({ count, pageToken, token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('events', 'v3', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Get events generated by a specific device\n   *\n   * @param {string} trackingId - ID of tracker\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} [options.count] - Number of rules returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @returns {Object} Body of the rules response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getByDevice(trackingId, { count, pageToken, token }) {\n    return this.validate({ trackingId, token }, ['trackingId', 'token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('events', 'v3', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Get all events generated by a specific rule\n   *\n   * @param {string} ruleId - ID of rule\n   * @param {Object} options - Object containing request options\n   * @param {number} [options.count] - Number of rules returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the rules response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getByRule(ruleId, { count, pageToken, token }) {\n    return this.validate({ ruleId, token }, ['ruleId', 'token'])\n      .then(() => {\n        const queryParameters = {\n          ruleId\n        };\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('events', 'v3', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Get details of a specific event\n   *\n   * @param {string} trackingId - ID of tracker\n   * @param {string} ruleId - ID of rule\n   * @param {string} timestamp - Time the event happened\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} [options.count] - Number of rules returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @returns {Object} Body of the rules response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getDetails(trackingId, ruleId, timestamp, { count, pageToken, token }) {\n    return this.validate({ trackingId, ruleId, timestamp, token }, ['trackingId', 'ruleId', 'timestamp', 'token'])\n      .then(() => {\n        const queryParameters = {\n          trackingId,\n          ruleId,\n          timestamp\n        };\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('events', 'v3', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n}\n\nmodule.exports = Events;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n */\n\nconst atLeastOneOf = ['definition', 'name', 'description'];\n\n/**\n * Create, modify and delete geofences.\n *\n * This class also handles creating associations between geofences and devices.\n *\n * For more information, see:\n * https://developer.here.com/documentation/tracking/topics/geofences.html\n *\n */\nclass Geofences {\n\n  /**\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} generate URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * List the geofences available to the user.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} [options.count] - Number of geofences returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @returns {Object} Body of the geofence response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  list({ count, pageToken, token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('geofences', 'v2', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Retrieve details about a geofence.\n   *\n   * @param {string} geofenceId - ID of geofence to retrieve\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the geofence response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  get(geofenceId, { token }) {\n    return this.validate({ token, geofenceId }, ['token', 'geofenceId'])\n      .then(() => {\n        const url = this.url('geofences', 'v2', geofenceId);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Create a new geofence associated with a user\n   *\n   * @param {Object} geofence - definition of the geofence\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the geofence response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  create(geofence, { token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        const url = this.url('geofences', 'v2');\n\n        const fields = Object.keys(geofence);\n\n        if (fields.indexOf('type') < 0) {\n          return Promise.reject(new Error('No geofence type specified'));\n        }\n\n        if (fields.indexOf('definition') < 0) {\n          return Promise.reject(new Error('No geofence shape definition specified'));\n        }\n\n        return this.fetch(url, {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(geofence)\n        });\n      });\n  }\n\n  /**\n   * Update a geofence\n   *\n   * @param {Object} geofence - Definition of the geofence\n   * @param {Object} geofence.id - ID of the geofence\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the geofence response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  update(geofence, { token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => this.validate(geofence, ['id']))\n      .then(() => {\n        const url = this.url('geofences', 'v2', geofence.id);\n\n        delete geofence.id;\n\n        const fields = Object.keys(geofence);\n\n        const missing = atLeastOneOf.filter(x => fields.indexOf(x) < 0);\n\n        if (missing.length === atLeastOneOf.length) {\n          return Promise.reject(new Error(`Geofence update requires at least one of:  ${missing.join(', ')}`));\n        }\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(geofence)\n        });\n      });\n  }\n\n  /**\n   * Remove geofence\n   *\n   * @param {Object} geofenceId - ID of the geofence\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object}\n   * @throws {Error} When an HTTP error has occurred\n   */\n  remove(geofenceId, { token }) {\n    return this.validate({ geofenceId, token }, ['token', 'geofenceId'])\n      .then(() => this.fetch(this.url('geofences', 'v2', geofenceId), {\n        method: 'delete',\n        headers: new Headers({\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n  /**\n   * Remove all geofences.\n   * This is a separate method so that it can't be called by accidentally\n   * forgetting to pass geofenceId\n   *\n   * @param {boolean} really - Confirmation to delete all\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object}\n   * @throws {Error} When an HTTP error has occurred\n   */\n  removeAll(really, { token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        if (really !== true) {\n          return Promise.reject(new Error('Confirmation required to delete all geofences.'));\n        }\n\n        const url = this.url('geofences', 'v2');\n\n        return this.fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`,\n            'x-confirm': really\n          })\n        });\n      });\n  }\n\n  /**\n   * Get the devices associated with a geofence.\n   *\n   * @param {string} geofenceId - ID of the geofence\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @param {number} [options.count] - Number of devices returned per page\n   * @returns {Object} Body of the device response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getDevices(geofenceId, { token, count, pageToken }) {\n    return this.validate({ geofenceId, token }, ['geofenceId', 'token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('geofence-associations', 'v2', geofenceId, 'devices', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Add a device to a geofence\n   *\n   * @param {string} geofenceId - ID of geofence\n   * @param {string} trackingId - ID of device to add\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the transition response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  addDevice(geofenceId, trackingId, { token }) {\n    return this.validate({ geofenceId, trackingId, token }, ['geofenceId', 'trackingId', 'token'])\n      .then(() => this.fetch(this.url('geofence-associations', 'v2', geofenceId, trackingId), {\n        method: 'put',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n  /**\n   * Remove a device from a geofence\n   *\n   * @param {string} geofenceId - ID of geofence\n   * @param {string} trackingId - ID of device to remove\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the transition response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  removeDevice(geofenceId, trackingId, { token }) {\n    return this.validate({ geofenceId, trackingId, token }, ['geofenceId', 'trackingId', 'token'])\n      .then(() => this.fetch(this.url('geofence-associations', 'v2', geofenceId, trackingId), {\n        method: 'delete',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n}\n\nmodule.exports = Geofences;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n */\nconst Geofences = require('./geofences');\nconst Device = require('./device');\nconst Devices = require('./devices');\nconst Vendor = require('./vendor');\nconst Notifications = require('./notifications');\nconst Shadows = require('./shadows');\nconst Traces = require('./traces');\nconst Transitions = require('./transitions');\nconst Journeys = require('./journeys');\nconst Users = require('./users');\nconst Aliases = require('./aliases');\nconst Metadata = require('./metadata');\nconst Events = require('./events');\nconst Rules = require('./rules');\nconst Associations = require('./associations');\nconst Messages = require('./messages');\n\n// Validation for correlationId\nconst v4 = new RegExp(/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i);\n\n/**\n * HERETracking JS simplifies access to HERE Tracking.\n * It can be used to create management consoles, monitoring interfaces\n * and general device interfaces.\n *\n * It can also be used to create a virtual device.\n */\nclass HERETracking {\n\n  /**\n   * Create an instance of HERETracking\n   *\n   * See https://developer.here.com/ for more details\n   */\n  constructor() {\n    this._hosts = {\n      'cit': 'https://cit.tracking.api.here.com',\n      'production': 'https://tracking.api.here.com'\n    };\n\n    this._name = 'HERETracking v2.2.1';\n    this._environment = 'production';\n    this._host = this._hosts[this._environment];\n\n    // If this is set, use it as a trace for all request\n    this._correlationId = null;\n\n    // If this is set, use it on all API calls\n    this._projectId = null;\n\n    const utils = {\n      url: this.url.bind(this),\n      validate: HERETracking.validate.bind(this),\n      fetch: (url, options = {}) => {\n        if (this._correlationId) {\n          options.headers = options.headers || {};\n          options.headers['X-Request-Id'] = this._correlationId;\n        }\n        return fetch(url, options)\n          .then(HERETracking.handleErrors)\n          .then((response) => {\n            const contentType = response.headers.get('content-type');\n\n            if (contentType) {\n              if (contentType.indexOf('application/json') !== -1) {\n                return response.json();\n              }\n              if (contentType.indexOf('text/plain') !== -1) {\n                return response.text();\n              }\n            }\n            return response;\n          });\n      },\n      normaliseId: HERETracking.normaliseId.bind(this)\n    };\n\n    /**\n     * Create, modify and delete geofences: {@link Geofences}\n     */\n    this.geofences = new Geofences(utils);\n    /**\n     * Device sender interface: {@link Device}\n     */\n    this.device = new Device(utils);\n    /**\n     * Device management interfaces: {@link Devices}\n     */\n    this.devices = new Devices(utils);\n    /**\n     * Provision new devices.: {@link Vendor}\n     */\n    this.vendor = new Vendor(utils, this.devices.claim);\n    /**\n     * Register and unregister notification channels: {@link Notifications}\n     */\n    this.notifications = new Notifications(utils);\n    /**\n     * Access to device shadows: {@link Shadows}\n     */\n    this.shadows = new Shadows(utils);\n    /**\n     * Access to device geofence transitions: {@link Transitions}\n     */\n    this.transitions = new Transitions(utils);\n    /**\n     * Manage journey templates and instances: {@link Journeys}\n     */\n    this.journeys = new Journeys(utils);\n    /**\n     * Access to device traces: {@link Traces}\n     */\n    this.traces = new Traces(utils);\n    /**\n     * Log in users, list available devices: {@link Users}\n     */\n    this.users = new Users(utils);\n    /**\n     * Manage external IDs for devices: {@link Aliases}\n     */\n    this.aliases = new Aliases(utils);\n    /**\n     * Manage associated data for devices and geofences: {@link Metadata}\n     */\n    this.metadata = new Metadata(utils);\n    /**\n     * Create and manage sensor rules {@link Rules}\n     */\n    this.rules = new Rules(utils);\n    /**\n     * Manage sensor events {@link Events}\n     */\n    this.events = new Events(utils);\n    /**\n     * Manage associations between devices and rules {@link Associations}\n     */\n    this.associations = new Associations(utils);\n  }\n\n  /**\n   * Return the name and version of this library\n   * @returns {string} Name and version\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * Valid environments are 'cit', 'production'\n   * @param {string} env - Environment name\n   */\n  set environment(env) {\n    if (Object.keys(this._hosts).indexOf(env) > -1) {\n      this._environment = env;\n      this._host = this._hosts[env];\n    }\n  }\n\n  /**\n   * Allows setting a global correlationId for all requests\n   * @param {string} id - valid UUID v4\n   */\n  set correlationId(id) {\n    if (id.match(v4)) {\n      this._correlationId = id;\n    } else {\n      throw new TypeError(Messages.v4);\n    }\n  }\n\n  /**\n   * @returns {string} Specified environment name\n   */\n  get environment() {\n    return this._environment;\n  }\n\n  /**\n   * @returns {string} Specified projectId name\n   */\n  get projectId() {\n    return this._projectId;\n  }\n\n  /**\n   * Allows setting a global projectId for all requests\n   * @param {string} id\n   */\n  set projectId(id) {\n    this._projectId = id;\n  }\n\n  /**\n   * Generate a correctly formatted URL pointing to the\n   * right environment.\n   *\n   * Can be called with:\n   *\n   *     url(servicename, version, path, segments)\n   *\n   * or\n   *\n   *     url(path)\n   *\n   * @param {...string} [args] Variable arguments list of path parts\n   * @returns {string} Formatted HERE Tracking URL\n   */\n  url(...args) {\n    const queryParams = {};\n\n    if (this._projectId) {\n      queryParams.projectId = this._projectId;\n    }\n\n    if (typeof args[args.length - 1] === 'object') {\n      const params = args.pop();\n\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key in params) {\n        queryParams[key] = params[key];\n      }\n    }\n\n    let pathname = `/${args.join('/')}`;\n\n    if (pathname.match(/^\\/\\//)) {\n      pathname = pathname.substr(1);\n    }\n\n    const query = HERETracking.serialize(queryParams);\n\n    return `${this._host}${pathname}${query ? `?${query}` : ''}`;\n  }\n\n  static serialize(obj) {\n    const str = [];\n\n    Object.keys(obj).forEach((key) => {\n      str.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj[key])}`);\n    });\n\n    return str.join('&');\n  }\n\n  /**\n   * Handle HTTP Errors\n   *\n   * Throw when the HTTP response is not a good one.\n   *\n   * @param {Object} response result of a Fetch call\n   * @returns {Object} A promise that resolves to the Response object of Fetch API\n   * @throws {Error} When an HTTP error has occurred\n   */\n  static handleErrors(response) {\n    if (!response.ok) {\n      return Promise.reject(response);\n    }\n    return response;\n  }\n\n  /**\n   * Allow methods to be called using either trackingId\n   * or an object containing externalId and appId\n   * @param {string} trackingId - can be a trackingId or an externalId/appId object\n   * @returns {Object} trackingId and queryParameter object\n   */\n  static normaliseId(trackingId) {\n    const { appId, externalId } = trackingId;\n\n    if (appId && externalId) {\n      return {\n        trackingId: externalId,\n        queryParameters: {\n          appId\n        }\n      };\n    }\n    return {\n      trackingId,\n      queryParameters: {}\n    };\n  }\n\n  /**\n   * Return consistent error messages\n   *\n   * @param {string} key Name of missing parameter\n   * @returns {string} Error message\n   */\n  static errorMessages(key) {\n    return Messages[key] || `Required parameter missing: ${key}`;\n  }\n\n  /**\n   * Determine missing parameters\n   *\n   * If a key is listed in requiredKeys but not available in\n   * options, an error message is returned;\n   *\n   * @param {Object} options supplied parameters\n   * @param {Array} requiredKeys List of required parameters\n   * @returns {Array} Error messages for missing parameters\n   */\n  static check(options, requiredKeys) {\n    return requiredKeys.map(key => (!options[key] && key) || key === 0)\n      .filter(Boolean)\n      .map(HERETracking.errorMessages);\n  }\n\n  /**\n   * Resolve or reject based on missing parameters\n   *\n   * @param {Object} options Supplied parameters\n   * @param {Array} keys List of required parameters\n   * @returns {Promise}\n   */\n  static validate(options, keys) {\n    if (typeof keys === 'undefined' || keys.length === 0) {\n      return Promise.resolve(true);\n    }\n    const errors = HERETracking.check(options, keys);\n\n    if (errors.length > 0) {\n      return Promise.reject(errors.map(Error));\n    }\n    return Promise.resolve(true);\n  }\n\n}\n\nmodule.exports = HERETracking;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Create and manage journey templates.\n *\n */\n\nclass Templates {\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - generate URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - wrap fetch and error handling\n   */\n  constructor(utils) {\n    this.url = utils.url;\n    this.validate = utils.validate;\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * List the journey templates available to the user.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {number} [options.pageSize] - max number of entries retrieved in the page\n   * @param {number} [options.pageIndex] - index of the page to retrieve\n   * @param {number} [options.likeName] - a search term to fetch template having this term matching parts or their names\n   * @param {number} [options.name] - an exact name search for a template\n   * @returns {Array} body of the journey templates response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  list({ pageSize, pageIndex, likeName, name, token }) {\n    return this.validate({ token }, ['token']).then(() => {\n      const queryParameters = {};\n\n      if (Number.isInteger(pageSize)) queryParameters.pageSize = pageSize;\n      if (Number.isInteger(pageIndex)) queryParameters.pageIndex = pageIndex;\n      if (typeof likeName === 'string') queryParameters.likeName = likeName;\n      if (typeof name === 'string') queryParameters.name = name;\n\n      const url = this.url('journeys', 'v2', 'journeyTemplates', queryParameters);\n\n      return this.fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      });\n    });\n  }\n\n  /**\n   * Get a specific journey template\n   *\n   * @param {string} templateId - ID of the journey template to retrieve\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {number} [options.pageSize] - max number of entries retrieved in the page\n   * @param {number} [options.pageIndex] - index of the page to retrieve\n   * @param {number} [options.likeName] - a search term to fetch template having this term matching parts or their names\n   * @param {number} [options.name] - an exact name search for a template\n   * @returns {Array} body of the journey templates response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  get(templateId, { token }) {\n    return this.validate({ token }, ['token']).then(() => {\n      const url = this.url('journeys', 'v2', 'journeyTemplates', templateId);\n\n      return this.fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      });\n    });\n  }\n\n  /**\n   * Create a journey template\n   *\n   * @param {number} description - Human-readable description of the template\n   * @param {number} checkpoints - Array of checkpoint objects in the order they should appear\n   * @param {Object} templateOptions - Options relating to the management of the journey\n   * @param {number} templateOptions.externalId - ID of of the template in the external system\n   * @param {boolean} templateOptions.adhoc - ???\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {Object} body of the journey template response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  create(description, checkpoints, { externalId, adhoc = false }, { token }) {\n    return this.validate({ description, checkpoints, token },\n      ['description', 'checkpoints', 'token'])\n      .then(() => {\n        const body = {\n          jorTempDesc: description,\n          jorTempAdhoc: adhoc,\n          checkpoints\n        };\n\n        if (externalId) {\n          body.jorTempExtUid = externalId;\n        }\n\n        return this.fetch(this.url('journeys', 'v2', 'journeyTemplates'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(body)\n        });\n      });\n  }\n\n  /**\n   * Create a journey template, checkpoints and checkpoint types via JSON upload\n   *\n   * @param {number} templateJson - Object describing all checkpoints, types and the full template\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {Object} body of the journey template response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  jsonCreate(templateJson, { token }) {\n    return this.validate({ templateJson, token },\n      ['templateJson', 'token'])\n      .then(() => {\n        return this.fetch(this.url('journeys', 'v2', 'import', 'setup'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(templateJson)\n        });\n      });\n  }\n\n  /**\n   * Delete journey template\n   * @param {number} templateId - ID of the tempalte to delete\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {object} successful delete confirmation\n   */\n  delete(templateId, {token}) {\n    return this.validate({ templateId, token },\n      ['templateId', 'token'])\n      .then(() => {\n        return this.fetch(this.url('journeys', 'v2', 'journeyTemplates', templateId), {\n          method: 'delete',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n}\n\n/**\n * Create and manage journey instances.\n *\n */\nclass Instances {\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - generate URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - wrap fetch and error handling\n   */\n  constructor(utils) {\n    this.url = utils.url;\n    this.validate = utils.validate;\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Retrieve details about a journey instance.\n   *\n   * @param {number} journeyId - ID of journey instance to retrieve\n   * @param {Object} options - Object containing request options\n   * @param {number} options.checkupTs - timestamp at which to evaluate the journey delays\n   * @param {string} options.token - valid user access token\n   * @param {string} [options.detailed] - required level of detail in response\n   * @param {string} [options.checkupTs] - timestamp we want information about.\n   * @returns {Object} body of the journey instance response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  get(journeyId, { checkupTs, detailed, token }) {\n    return this.validate({ token, journeyId }, ['token', 'journeyId']).then(() => {\n      const queryParameters = {};\n\n      if (typeof detailed === 'string') queryParameters.detailed = detailed;\n      if (Number.isInteger(checkupTs)) queryParameters.checkupTs = checkupTs;\n\n      const url = this.url('journeys', 'v2', `${journeyId}`, queryParameters);\n\n      return this.fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      });\n    });\n  }\n\n  /**\n   * List the journey instances available to the user\n   *\n   * @param {Object} options - Object containing request options\n   * @param {number} options.checkupTs - timestamp at which to evaluate the journey delays\n   * @param {string} options.token - valid user access token\n   * @param {string} options.detailed - required level of detail in response\n   * @returns {Object} body of the journey instance response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  list({ checkupTs, detailed, token }) {\n    return this.validate({ token }, ['token']).then(() => {\n      const queryParameters = {};\n\n      if (typeof detailed === 'string') queryParameters.detailed = detailed;\n      if (Number.isInteger(checkupTs)) queryParameters.checkupTs = checkupTs;\n\n      const url = this.url('journeys', 'v2', queryParameters);\n\n      return this.fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      });\n    });\n  }\n\n  /**\n   * Create a journey instance\n   *\n   * @param {number} templateId - ID of journey instance to retrieve\n   * @param {number} trackingId - ID of the device\n   * @param {number} externalId - ID of of the device in the external system\n   * @param {Object} instanceOptions - Options relating to the management of the journey\n   * @param {boolean} instanceOptions.controlled - Enable controlled journey transition mode\n   * @param {boolean} instanceOptions.autostart - Start the journey when the first checkpoint is transitioned\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {string} options.detailed - required level of detail in response\n   * @returns {Object} body of the journey instance response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  create(templateId, trackingId, externalId, { controlled = true, autoStart = true }, { token }) {\n    return this.validate({ templateId, trackingId, externalId, token },\n      ['templateId', 'trackingId', 'externalId', 'token'])\n      .then(() => {\n        const body = {\n          jorTempId: templateId,\n          jorExtUid: externalId,\n          trackerUid: trackingId,\n          jorControlled: controlled,\n          autoStart\n        };\n\n        return this.fetch(this.url('journeys', 'v2'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(body)\n        });\n      });\n  }\n\n  /**\n   * Create journey instance via JSON upload\n   *\n   * @param {number} instanceJson - Object describing all checkpoints, types and the full template\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {Object} body of the journey template response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  jsonCreate(instanceJson, { token }) {\n    return this.validate({ instanceJson, token },\n      ['instanceJson', 'token'])\n      .then(() => {\n        return this.fetch(this.url('journeys', 'v2', 'import', 'journeys'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(instanceJson)\n        });\n      });\n  }\n\n}\n\n/**\n * Create and manage journey statistics.\n *\n */\nclass Stats {\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - generate URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - wrap fetch and error handling\n   */\n  constructor(utils) {\n    this.url = utils.url;\n    this.validate = utils.validate;\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Retrieve statistical totals.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {number} options.checkupTs - the timestamp where the statistics are to be retrieved\n   * @param {Array} options.templates - journey template IDs, for which transactions are to contribute\n   * to the statistics\n   * @param {Array} options.journeys - journey IDs, which are to contribute to the statistics\n   * @param {Array} options.checkpoints - check point IDs, for which transactions are to contribute\n   * in the statistics\n   * @param {Array} options.checkpointTypes - checkpoint types, for which transactions are to\n   * contribute to the statistics\n   * @param {Array} options.assets - assets list, for which transactions are to contribute to the statistics\n   * @param {number} options.statusId - the status ID of journey instances to contribute to the statistics\n   * @param {number} options.fromTs - the minimum checkpoint event timestamp that may contribute to\n   * the statistics\n   * @param {number} options.toTs - the maximum checkpoint event timestamp that may contribute to\n   * the statistics\n   * @param {Array} options.ranges - array of time ranges to obtain counts within { fromTs: 9999, toTs: 9999 }\n   * @returns {Object} body of the statistics response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  getOverallTotals({\n    checkupTs, templates, journeys, checkpoints, checkpointTypes,\n    assets, statusId, fromTs, toTs, ranges, token\n  }) {\n    return this.validate({ token }, ['token']).then(() => {\n      const queryParameters = {};\n\n      if (Number.isInteger(checkupTs)) queryParameters.checkupTs = checkupTs;\n      if (Number.isInteger(statusId)) queryParameters.statusId = statusId;\n      if (Number.isInteger(fromTs)) queryParameters.fromTs = fromTs;\n      if (Number.isInteger(toTs)) queryParameters.toTs = toTs;\n\n      const body = {};\n\n      if (Array.isArray(templates) && templates.length) body.templates = templates;\n      if (Array.isArray(journeys) && journeys.length) body.journeys = journeys;\n      if (Array.isArray(checkpoints) && checkpoints.length) body.checkpoints = checkpoints;\n      if (Array.isArray(checkpointTypes) && checkpointTypes.length) body.checkpointTypes = checkpointTypes;\n      if (Array.isArray(assets) && assets.length) body.assets = assets;\n      if (Array.isArray(ranges) && ranges.length) body.ranges = ranges;\n\n      const url = this.url('journeys', 'v2', 'stats', 'overallTotals', queryParameters);\n\n      return this.fetch(url, {\n        method: 'post',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }),\n        body: JSON.stringify(body)\n      });\n    });\n  }\n\n  /**\n   * Retrieve journeys that have delays in a specific delay range.\n   *\n   * @param {number} minDelayS - Minimum delay value for a journey instance to Retrieve\n   * @param {number} maxDelayS - Maximum delay value for a journey instance to Retrieve\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {number} options.checkupTs - the timestamp where the statistics are to be retrieved\n   * @param {Array} options.templates - journey template IDs, for which transactions are to contribute\n   * to the statistics\n   * @param {Array} options.journeys - journey IDs, which are to contribute to the statistics\n   * @param {Array} options.checkpoints - check point IDs, for which transactions are to contribute\n   * in the statistics\n   * @param {Array} options.checkpointTypes - checkpoint types, for which transactions are to\n   * contribute to the statistics\n   * @param {Array} options.assets - assets list, for which transactions are to contribute to the statistics\n   * @param {number} options.statusId - the status ID of journey instances to contribute to the statistics\n   * @param {number} options.fromTs - the minimum checkpoint event timestamp that may contribute to\n   * the statistics\n   * @param {number} options.toTs - the maximum checkpoint event timestamp that may contribute to\n   * the statistics\n   * @returns {Object} body of the journeys list response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  listJourneysByDelays(minDelayS, maxDelayS, {\n    checkupTs, templates, journeys, checkpoints, checkpointTypes,\n    assets, statusId, fromTs, toTs, pageSize, pageIndex, token\n  }) {\n    if (!Number.isInteger(minDelayS) || !Number.isInteger(maxDelayS) || minDelayS > maxDelayS) {\n      return Promise.reject(new Error('Invalid min/max delay values'));\n    }\n    return this.validate({ token }, ['token']).then(() => {\n      const queryParameters = { minDelayS, maxDelayS };\n\n      if (Number.isInteger(checkupTs)) queryParameters.checkupTs = checkupTs;\n      if (Number.isInteger(statusId)) queryParameters.statusId = statusId;\n      if (Number.isInteger(fromTs)) queryParameters.fromTs = fromTs;\n      if (Number.isInteger(toTs)) queryParameters.toTs = toTs;\n      if (Number.isInteger(pageSize)) queryParameters.pageSize = pageSize;\n      if (Number.isInteger(pageIndex)) queryParameters.pageIndex = pageIndex;\n\n      const body = {};\n\n      if (Array.isArray(templates) && templates.length) body.templates = templates;\n      if (Array.isArray(journeys) && journeys.length) body.journeys = journeys;\n      if (Array.isArray(checkpoints) && checkpoints.length) body.checkpoints = checkpoints;\n      if (Array.isArray(checkpointTypes) && checkpointTypes.length) body.checkpointTypes = checkpointTypes;\n      if (Array.isArray(assets) && assets.length) body.assets = assets;\n\n      const url = this.url('journeys', 'v2', 'stats', 'journeysDelays', queryParameters);\n\n      return this.fetch(url, {\n        method: 'post',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }),\n        body: JSON.stringify(body)\n      });\n    });\n  }\n}\n\n/**\n * Create and manage journey checkpoints.\n *\n */\nclass Checkpoints {\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - generate URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - wrap fetch and error handling\n   */\n  constructor(utils) {\n    this.url = utils.url;\n    this.validate = utils.validate;\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * List the checkpoints available to the user.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {number} [options.pageSize] - max number of entries retrieved in the page\n   * @param {number} [options.pageIndex] - index of the page to retrieve\n   * @param {number} [options.likeName] - a search term to fetch template having this term matching parts or their names\n   * @param {number} [options.name] - an exact name search for a template\n   * @returns {Array} body of the journey templates response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  list({ pageSize, pageIndex, likeName, name, token }) {\n    return this.validate({ token }, ['token']).then(() => {\n      const queryParameters = {};\n\n      if (Number.isInteger(pageSize)) queryParameters.pageSize = pageSize;\n      if (Number.isInteger(pageIndex)) queryParameters.pageIndex = pageIndex;\n      if (typeof likeName === 'string') queryParameters.likeName = likeName;\n      if (typeof name === 'string') queryParameters.name = name;\n\n      const url = this.url('journeys', 'v2', 'checkpoints', queryParameters);\n\n      return this.fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      });\n    });\n  }\n\n  /**\n   * Get the checkpoint details\n   *\n   * @param {string} checkpointId - ID of checkpoint we want information about\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {number} [options.pageSize] - max number of entries retrieved in the page\n   * @param {number} [options.pageIndex] - index of the page to retrieve\n   * @param {number} [options.likeName] - a search term to fetch template having this term matching parts or their names\n   * @param {number} [options.name] - an exact name search for a template\n   * @returns {Array} body of the journey templates response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  get(checkpointId, { pageSize, pageIndex, likeName, name, token }) {\n    return this.validate({ token, checkpointId }, ['token', 'checkpointId']).then(() => {\n      const url = this.url('journeys', 'v2', 'checkpoints', `${checkpointId}`);\n\n      return this.fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      });\n    });\n  }\n\n  /**\n   * List the checkpoint types available to the user.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @param {number} [options.pageSize] - max number of entries retrieved in the page\n   * @param {number} [options.pageIndex] - index of the page to retrieve\n   * @param {number} [options.likeName] - a search term to fetch template having this term matching parts or their names\n   * @param {number} [options.name] - an exact name search for a template\n   * @returns {Array} body of the journey templates response\n   * @throws {Error} when an HTTP error has occurred\n   */\n  listTypes({ pageSize, pageIndex, likeName, name, token }) {\n    return this.validate({ token }, ['token']).then(() => {\n      const queryParameters = {};\n\n      if (Number.isInteger(pageSize)) queryParameters.pageSize = pageSize;\n      if (Number.isInteger(pageIndex)) queryParameters.pageIndex = pageIndex;\n      if (typeof likeName === 'string') queryParameters.likeName = likeName;\n      if (typeof name === 'string') queryParameters.name = name;\n\n      const url = this.url('journeys', 'v2', 'checkpointtypes', queryParameters);\n\n      return this.fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      });\n    });\n  }\n\n  /**\n   * Create checkpoints\n   * @param {Array} checkpoints - list of checkpoints to create\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {Object} list of failed and succesful creations\n   */\n  create(checkpoints, {token}) {\n    return this.validate({ checkpoints, token },\n      ['checkpoints', 'token'])\n      .then(() => {\n        const body = checkpoints.map(checkpoint => {\n          const checkpointBody = {\n            cpTypeId: checkpoint.type,\n            cpDesc: checkpoint.description\n          };\n\n          if (checkpoint.externalId) {\n            checkpointBody.cpExtUid = checkpoint.externalId;\n          }\n          if (checkpoint.externalIdType) {\n            checkpointBody.cpExtUid = checkpoint.externalIdType;\n          }\n          if (checkpoint.info) {\n            checkpointBody.infoObj = checkpoint.info;\n          }\n          return checkpointBody;\n        });\n\n        return this.fetch(this.url('journeys', 'v2', 'checkpoints'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({checkpoints: body})\n        });\n      });\n  }\n\n  /**\n   * Delete checkpoint\n   * @param {number} checkpointId - ID of the checkpoint to delete\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {object} successful delete confirmation\n   */\n  delete(checkpointId, {token}) {\n    return this.validate({ checkpointId, token },\n      ['checkpointId', 'token'])\n      .then(() => {\n        return this.fetch(this.url('journeys', 'v2', 'checkpoints', checkpointId), {\n          method: 'delete',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Create checkpoint type\n   * @param {String} name - Human-readable name of type to create\n   * @param {String} externalId - reference to an external system ID\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {Object} confirmation of type creation\n   */\n  createType(name, externalId, {token}) {\n    return this.validate({ name, externalId, token },\n      ['name', 'externalId', 'token'])\n      .then(() => {\n        return this.fetch(this.url('journeys', 'v2', 'checkpointtypes'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({\n            cpTypeName: name,\n            cpTypeExtUid: externalId\n          })\n        });\n      });\n  }\n\n  /**\n   * Delete checkpoint type\n   * @param {String} typeId - ID of the checkpoint type to delete\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - valid user access token\n   * @returns {Object} confirmation of type deletion\n   */\n  deleteType(typeId, {token}) {\n    return this.validate({ typeId, token },\n      ['typeId', 'token'])\n      .then(() => {\n        return this.fetch(this.url('journeys', 'v2', 'checkpointtypes', typeId), {\n          method: 'delete',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n}\n\n/**\n * Create and manage journeys.\n *\n */\nclass Journeys {\n\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - generate URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - wrap fetch and error handling\n   */\n  constructor(utils) {\n    this.templates = new Templates(utils);\n    this.stats = new Stats(utils);\n    this.instances = new Instances(utils);\n    this.checkpoints = new Checkpoints(utils);\n  }\n}\n\nmodule.exports = Journeys;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Strings for error messages\n *\n *  * token: 'No token supplied',\n *  * trackingId: 'No tracking ID specified',\n *  * userAccountId: 'No user account ID specified',\n *  * deviceId: 'No device ID specified',\n *  * deviceSecret: 'No device secret supplied',\n *  * n: 'Number n not specified',\n *  * appId: 'No App ID supplied',\n *  * givenName: 'No given name supplied',\n *  * familyName: 'No family name supplied',\n *  * email: 'No email supplied',\n *  * count: 'count (Number of devices) not specified',\n *  * vendorId: 'vendorId not specified',\n *  * requestId: 'requestId not specified',\n *  * geofence: 'No geofence definition provided',\n *  * geofenceId: 'No geofence ID specified'\n *\n */\nconst Messages = {\n  token: 'No token supplied',\n  trackingId: 'No tracking ID specified',\n  idOrObject: 'No tracking ID or external ID/app ID object specified',\n  userAccountId: 'No user account ID specified',\n  deviceId: 'No device ID specified',\n  deviceSecret: 'No device secret supplied',\n  n: 'Number n not specified',\n  appId: 'No App ID supplied',\n  givenName: 'No given name supplied',\n  familyName: 'No family name supplied',\n  email: 'No email supplied',\n  count: 'count (Number of devices) not specified',\n  vendorId: 'vendorId not specified',\n  requestId: 'requestId not specified',\n  geofence: 'No geofence definition provided',\n  geofenceId: 'No geofence ID specified',\n  v4: 'Supplied ID is not a valid UUIDv4'\n};\n\nmodule.exports = Messages;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Provide a trackingId or geofenceId and retrieve associated metadata.\n * Update meta information for your resource.\n *\n * A tracker or geofence often has to be associated with metadata;\n * adding descriptive information about it. This service allows the\n * association of arbitrary JSON object with a trackingId or geofenceId.\n *\n */\n\nclass Metadata {\n\n  /**\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} generate URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n    /**\n     * Allow methods to be called using trackingId or externalId/appId object\n     * @type {function(url: string): Object}\n     */\n    this.normaliseId = utils.normaliseId;\n  }\n\n  /**\n   * Gets metadata associated with the trackingId\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Object} Provides all metadata in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  get(idOrObject, { token, count, pageToken }) {\n\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('metadata', 'v2', 'devices', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'put',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Updates the metadata object associated with a tracker\n   *\n   * The provided metadata is merged with the existing metadata object.\n   *\n   *  * new keys are added\n   *. * the value of existing keys will be updated with the provided value\n   *. * Adding value 'null' for a key deletes it from the metadata object\n   *\n   * Returns the updated metadata object.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {Object} metadata - metadata to add to the tracker\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} The updated metadata object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  update(idOrObject, metadata = {}, { token }) {\n\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('metadata', 'v2', 'devices', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(metadata)\n        });\n      });\n  }\n\n  /**\n   * Updates a single metadata value\n   *\n   * Returns the updated metadata object.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {string} key - The key where this value should be stored\n   * @param {string} value - The value to store against the key\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} The updated metadata object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  setValue(idOrObject, key, value, { token }) {\n\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('metadata', 'v2', 'devices', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({\n            [key]: value\n          })\n        });\n      });\n  }\n\n  /**\n   * Deletes a single metadata key\n   *\n   * Returns the updated metadata object.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {string} key - The key to delete\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} The updated metadata object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  deleteKey(idOrObject, key, { token }) {\n\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('metadata', 'v2', 'devices', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({\n            [key]: null\n          })\n        });\n      });\n  }\n\n  /**\n   * Deletes all aliases of this device.\n   *\n   * @param {string} idOrObject - can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Provides all aliases in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  deleteAll(idOrObject, { token }) {\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = this.url('metadata', 'v2', 'devices', trackingId, queryParameters);\n\n        return this.fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'x-confirm': 'true',\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Gets metadata associated with the geofence\n   *\n   * @param {string} geofenceId - geofence ID\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Provides all metadata in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  geofenceGet(geofenceId, { token }) {\n\n    return this.validate({ token, geofenceId }, ['token', 'geofenceId'])\n      .then(() => {\n        const url = this.url('metadata', 'v2', 'geofences', geofenceId);\n\n        return this.fetch(url, {\n          method: 'get',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Updates the metadata object associated with a geofence\n   *\n   * The provided metadata is merged with the existing metadata object.\n   *\n   *  * new keys are added\n   *. * the value of existing keys will be updated with the provided value\n   *. * Adding value 'null' for a key deletes it from the metadata object\n   *\n   * Returns the updated metadata object.\n   *\n   * @param {string} geofenceId - geofence ID\n   * @param {Object} metadata - metadata to add to the tracker\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} The updated metadata object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  geofenceUpdate(geofenceId, metadata = {}, { token }) {\n\n    return this.validate({ token, geofenceId }, ['token', 'geofenceId'])\n      .then(() => {\n        const url = this.url('metadata', 'v2', 'geofences', geofenceId);\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(metadata)\n        });\n      });\n  }\n\n  /**\n   * Updates a single metadata value\n   *\n   * Returns the updated metadata object.\n   *\n   * @param {string} geofenceId - geofence ID\n   * @param {string} key - The key where this value should be stored\n   * @param {string} value - The value to store against the key\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} The updated metadata object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  geofenceSetValue(geofenceId, key, value, { token }) {\n\n    return this.validate({ token, geofenceId }, ['token', 'geofenceId'])\n      .then(() => {\n        const url = this.url('metadata', 'v2', 'geofences', geofenceId);\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({\n            [key]: value\n          })\n        });\n      });\n  }\n\n  /**\n   * Deletes a single metadata key\n   *\n   * Returns the updated metadata object.\n   *\n   * @param {string} geofenceId - geofence ID\n   * @param {string} key - The key to delete\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} The updated metadata object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  geofenceDeleteKey(geofenceId, key, { token }) {\n\n    return this.validate({ token, geofenceId }, ['token', 'geofenceId'])\n      .then(() => {\n        const url = this.url('metadata', 'v2', 'geofences', geofenceId);\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({\n            [key]: null\n          })\n        });\n      });\n  }\n\n  /**\n   * Deletes all aliases of this device.\n   *\n   * @param {string} geofenceId - geofence ID\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Provides all aliases in a JSON object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  geofenceDeleteAll(geofenceId, { token }) {\n    return this.validate({ token, geofenceId }, ['token', 'geofenceId'])\n      .then(() => {\n        const url = this.url('metadata', 'v2', 'geofences', geofenceId);\n\n        return this.fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'x-confirm': 'true',\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n}\n\nmodule.exports = Metadata;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Register and unregister notification channels.\n *\n * These channels will be used to inform users of device geofence transitions\n *\n * For more information, see:\n * https://developer.here.com/documentation/tracking/topics/notifications.html\n *\n */\nclass Notifications {\n\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} generate URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Register a notifications channel\n   * /notifications/v2/register\n   *\n   * @param {string} type - Type of channel, possible value: 'webhook'\n   * @param {Object} value - Channel details, URL for 'webhook'\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Success message\n   * @throws {Error} When an HTTP error has occurred\n   */\n  register(type, value, { token }) {\n    return this.validate({ type, token }, ['type', 'value', 'token'])\n      .then(() => {\n        const channel = {\n          type\n        };\n\n        if (type !== 'webhook') {\n          return Promise.reject(new Error('Unsupported notification type'));\n        }\n\n        channel.url = value;\n\n        const url = this.url('notifications', 'v2', 'register');\n\n        return this.fetch(url, {\n          method: 'post',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(channel)\n        });\n      });\n  }\n\n  /**\n   * Retrieve list of registered notification channels\n   * /notifications/v2/registrations\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} List of notification channels\n   * @throws {Error} When an HTTP error has occurred\n   */\n  list({ token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => this.fetch(this.url('notifications', 'v2', 'registrations'), {\n        credentials: 'include',\n        headers: new Headers({\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n  /**\n   * Remove a notification channel\n   *  /notifications/v2/registration/{channelName}\n   *\n   * @param {Object} channelName - ID of the channel\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @throws {Error} When an HTTP error has occurred\n   */\n  delete(channelName, { token }) {\n    return this.validate({ channelName }, ['channelName'])\n      .then(() => this.fetch(this.url('notifications', 'v2', 'registration', channelName), {\n        method: 'delete',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n}\n\nmodule.exports = Notifications;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Defining and manage sensor rules\n *\n */\n\nclass Rules {\n\n  /**\n   * @param {Object} utils - General utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string} Generate the URL for HERE Tracking\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n    /**\n     * Sensor types\n     */\n    this.SENSOR_TYPES = ['acceleration', 'attach', 'battery', 'humidity', 'pressure', 'tamper', 'temperature'];\n  }\n\n  /**\n   * List the rules available to the user.\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} [options.count] - Number of rules returned per page (default 100)\n   * @param {string} [options.pageToken] - Page token used for retrieving next page\n   * @returns {Object} Body of the rules response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  list({ count, pageToken, token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        const url = this.url('sensors', 'v3', queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Retrieve details about a rule.\n   *\n   * @param {string} ruleId - ID of sensor rule to retrieve\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the sensor rule response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  get(ruleId, { token }) {\n    return this.validate({ token, ruleId }, ['token', 'ruleId'])\n      .then(() => {\n        const url = this.url('sensors', 'v3', ruleId);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Create rule\n   *\n   * @param {string} type - type of sensor\n   * @param {Object} ruleOptions - Object containing rule details\n   * @param {string} [ruleOptions.name] - human-readable name of rule\n   * @param {string} [ruleOptions.description] - human-readable description of rule\n   * @param {Object} [ruleOptions.threshold] - threshold\n   * @param {number} [ruleOptions.threshold.value] - threshold value\n   * @param {Object} [ruleOptions.range] - Object containing range details\n   * @param {number} [ruleOptions.range.begin] - minimum value in range\n   * @param {number} [ruleOptions.range.end] - maximum value in range\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object}\n   * @throws {Error} When an HTTP error has occurred\n   */\n  create(type, { name, description, range, threshold }, { token }) {\n    return this.validate({\n      type,\n      token\n    }, ['type', 'token'])\n      .then(() => {\n        if (!this.SENSOR_TYPES.includes(type)) {\n          return Promise.reject(new Error(`Sensor rules must be one of: ${this.SENSOR_TYPES.join(', ')}`));\n        }\n\n        const body = {\n          type\n        };\n\n        if (name) body.name = name;\n        if (description) body.description = description;\n        if (threshold &&\n          typeof threshold.value !== 'undefined') body.threshold = threshold;\n        if (range &&\n          typeof range.begin !== 'undefined' &&\n          typeof range.end !== 'undefined') body.range = range;\n\n        return this.fetch(this.url('sensors', 'v3'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(body)\n        });\n      });\n  }\n\n  /**\n   * Create a new attach-type sensor rule\n   *\n   * @param {Object} rule - Object containing rule definition\n   * @param {string} rule.name - Valid user access token\n   * @param {string} rule.description - Valid user access token\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} ID of the rule\n   * @throws {Error} When an HTTP error has occurred\n   */\n  createAttach({ name = '', description = '' }, { token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        return this.fetch(this.url('sensors', 'v3'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({\n            name,\n            description,\n            type: 'attach'\n          })\n        });\n      });\n  }\n\n  /**\n   * Create a tamper-type sensor rule\n   *\n   * @param {Object} rule - Object containing rule definition\n   * @param {string} rule.name - Valid user access token\n   * @param {string} rule.description - Valid user access token\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} ID of the rule\n   * @throws {Error} When an HTTP error has occurred\n   */\n  createTamper({ name = '', description = '' }, { token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        return this.fetch(this.url('sensors', 'v3'), {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify({\n            name,\n            description,\n            type: 'tamper'\n          })\n        });\n      });\n  }\n\n  /**\n   * Update an existing sensor rule\n   *\n   * @param {string} id - rule id\n   * @param {Object} ruleOptions - Object containing rule details\n   * @param {string} [ruleOptions.name] - human-readable name of rule\n   * @param {string} [ruleOptions.description] - human-readable description of rule\n   * @param {Object} [ruleOptions.range] - Object containing range details\n   * @param {number} [ruleOptions.range.begin] - minimum value in range\n   * @param {number} [ruleOptions.range.end] - maximum value in range\n   * @param {Object} [ruleOptions.threshold] - threshold\n   * @param {number} [ruleOptions.threshold.value] - threshold value\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the geofence response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  update(id, { type, name, description, range, threshold}, { token }) {\n    return this.validate({\n      id,\n      token\n    }, ['id', 'token'])\n      .then(() => {\n        const url = this.url('sensors', 'v3', id);\n\n        const body = {\n          type // TODO: this should be ignored in the backend\n        };\n\n        if (name) body.name = name;\n        if (description) body.description = description;\n        if (threshold &&\n          typeof threshold.value !== 'undefined') body.threshold = threshold;\n        if (range &&\n          typeof range.begin !== 'undefined' &&\n          typeof range.end !== 'undefined') body.range = range;\n\n        return this.fetch(url, {\n          method: 'put',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(body)\n        });\n      });\n  }\n\n  /**\n   * Remove rule\n   *\n   * @param {Object} ruleId - ID of the rule\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object}\n   * @throws {Error} When an HTTP error has occurred\n   */\n  remove(ruleId, { token }) {\n    return this.validate({ ruleId, token }, ['token', 'ruleId'])\n      .then(() => this.fetch(this.url('sensors', 'v3', ruleId), {\n        method: 'delete',\n        headers: new Headers({\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n  /**\n   * Remove all rules.\n   * This is a separate method so that it can't be called by accidentally\n   * forgetting to pass rule ID\n   *\n   * @param {boolean} really - Confirmation to delete all\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object}\n   * @throws {Error} When an HTTP error has occurred\n   */\n  removeAll(really, { token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        if (really !== true) {\n          return Promise.reject(new Error('Confirmation required to delete all rules.'));\n        }\n\n        const url = this.url('sensors', 'v3');\n\n        return this.fetch(url, {\n          method: 'delete',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`,\n            'x-confirm': really\n          })\n        });\n      });\n  }\n\n}\n\nmodule.exports = Rules;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Access to device shadows\n *\n * For more information, see:\n * https://developer.here.com/documentation/tracking/topics/shadows.html\n *\n */\nclass Shadows {\n\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   * @param {function(trackingId: string): Object} utils.normaliseId - Allow methods to be called using trackingId or\n   * externalId/appId object\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string}\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n    /**\n     * Allow methods to be called using trackingId or externalId/appId object\n     * @type {function(trackingId: string): Object}\n     */\n    this.normaliseId = utils.normaliseId;\n  }\n\n  /**\n   * Get the shadow of the specified device\n   *\n   * @param {string} idOrObject - Can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Newly modified device shadow\n   * @throws {Error} When an HTTP error has occurred\n   */\n  get(idOrObject, { token }) {\n    return this.validate({ token, idOrObject }, ['token', 'idOrObject'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n\n        return this.fetch(this.url('shadows', 'v2', trackingId, queryParameters), {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Get the shadow of the specified devices.\n   *\n   * By providing the `after` timestamp parameter the request will return those\n   * shadow objects that were modified at or after the timestamp.\n   *\n   * By providing the `appId` parameter, the `trackingIds` is expected to be an\n   * array of application specific external identifiers.\n   *\n   * @param {string} trackingIds - IDs of the devices\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {number} [options.after] - Milliseconds elapsed since 1 January 1970 00:00:00 UTC\n   * @param {string} [options.appId] - Application identifier\n   * @returns {Array} Array of shadow response objects\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getBatch(trackingIds, { token, after, appId }) {\n    return this.validate({ trackingIds, token }, ['trackingIds', 'token'])\n      .then(() => {\n        if (!(trackingIds instanceof Array)) {\n          return Promise.reject('You must supply an array');\n        }\n        if (trackingIds.length > 100) {\n          return Promise.reject('Maximum batch size is 100');\n        }\n\n        const queryParameters = {};\n\n        if (after) queryParameters.after = after;\n        if (appId) queryParameters.appId = appId;\n\n        let url = this.url('shadows', 'v2', 'batch', queryParameters);\n\n        return this.fetch(url, {\n          method: 'post',\n          credentials: 'include',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(trackingIds)\n        });\n      });\n  }\n\n  /**\n   * Get desired shadow of the specified device or value of a single property\n   * in the shadow if `selector` is provided.\n   *\n   * To pick a property from the shadow provide property's name as `selector`,\n   * a nested property can be selected using slash as delimiter, like this: `payload/time/minutes`\n   *\n   * @param {string} idOrObject - Can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} [options.selector] - JSON selector\n   * @returns {Object} Shadow of the queried object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getDesired(idOrObject, options) {\n    return this.getByState(idOrObject, 'desired', options);\n  }\n\n  /**\n   * @ignore\n   */\n  getByState(idOrObject, state, { token, selector }) {\n    return this.validate({ idOrObject, token }, ['idOrObject', 'token'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n        const url = selector ?\n          this.url('shadows', 'v2', trackingId, state, selector, queryParameters) :\n          this.url('shadows', 'v2', trackingId, state, queryParameters);\n\n        return this.fetch(url, {\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Get reported shadow of the specified device or value of a single property\n   * in the shadow if `selector` is provided.\n   *\n   * To pick a property from the shadow provide property's name as `selector`,\n   * a nested property can be selected using slash as delimiter, like this: `payload/time/minutes`\n   *\n   * @param {string} idOrObject - Can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} [options.selector] - JSON selector\n   * @returns {Object} Shadow of the queried object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getReported(idOrObject, options) {\n    return this.getByState(idOrObject, 'reported', options);\n  }\n\n  /**\n   * Set the desired state of the specified device\n   *\n   * @param {string} idOrObject - Can be a trackingId or an externalId/appId object\n   * @param {Object} desired - Object containing desired object configuration\n   * @param {Object} [desired.payload] - payload object\n   * @param {Object} [desired.system] - system object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Shadow of the queried object\n   * @throws {Error} When an HTTP error has occurred\n   */\n  setDesired(idOrObject, desired, options) {\n    const { token } = options;\n    const shadow = {\n      desired: {\n        payload: desired.payload,\n        system: desired.system\n      }\n    };\n\n    return this.validate({ idOrObject, shadow, token }, ['idOrObject', 'shadow', 'token'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n\n        return this.fetch(this.url('shadows', 'v2', trackingId, queryParameters), {\n          method: 'put',\n          credentials: 'include',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }),\n          body: JSON.stringify(shadow)\n        });\n      });\n  }\n\n  /**\n   * Remove all data from the shadow of the specified device\n   * but don't remove the shadow object itself\n   *\n   * @param {string} idOrObject - Can be a trackingId or an externalId/appId object\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Empty response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  clear(idOrObject, { token }) {\n    return this.validate({ idOrObject, token }, ['idOrObject', 'token'])\n      .then(() => {\n        const { trackingId, queryParameters } = this.normaliseId(idOrObject);\n\n        return this.fetch(this.url('shadows', 'v2', trackingId, queryParameters), {\n          method: 'delete',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n}\n\nmodule.exports = Shadows;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Access to device traces\n *\n * For more information, see:\n * https://developer.here.com/documentation/tracking/topics/traces.html\n *\n */\nclass Traces {\n\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string}\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Get the specified number of recent trace samples.\n   *\n   * Always returns the filtered trace.\n   *\n   * @example\n   * const last5 = hereTracking.traces.getLastN('HERE-123...', 5, { token: 'h1.123...' })\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} last - retrieve the last N samples\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getLastN(trackingId, last, options) {\n    return this.get(trackingId, { last }, options);\n  }\n\n  /**\n   * Get the trace of the specified device before the given timestamp.\n   *\n   * Always returns the filtered trace.\n   *\n   * @example\n   * hereTracking.traces.getBefore('HERE-123...', Date.now() - 300000, { token: 'h1.123...' })\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} before - retrieve the samples before this millisecond timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getBefore(trackingId, before, options) {\n    return this.get(trackingId, { before }, options);\n  }\n\n  /**\n   * Get the trace of the specified device after the given timestamp.\n   *\n   * Always returns the filtered trace.\n   *\n   * @example\n   * hereTracking.traces.getAfter('HERE-123...', Date.now() - 300000, { token: 'h1.123...' })\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} after - retrieve the samples after this millisecond timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getAfter(trackingId, after, options) {\n    return this.get(trackingId, { after }, options);\n  }\n\n  /**\n   * Get the trace of the specified device between two timestamps.\n   *\n   * Always returns the filtered trace.\n   *\n   * @example\n   * hereTracking.traces.getBetween('HERE-123...', Date.now() - 300000, Date.now() - 600000, { token: 'h1.123...' })\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} before - retrieve the samples before this timestamp\n   * @param {number} after - retrieve the samples after this timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getBetween(trackingId, before, after, options) {\n    return this.get(trackingId, { before, after }, options);\n  }\n\n  /**\n   * Get the trace of the specified device\n   *\n   * @example\n   * const trace = hereTracking.traces.get('HERE-123...', {}, { token: 'h1.123...' })\n   *\n   * @example\n   * const traceFirstPage = hereTracking.traces.get('HERE-123...', {}, { token: 'h1.123...' })\n   *\n   * @example\n   * hereTracking.traces.get('HERE-123...', {}, { token: 'h1.123...', pageToken: tokenFromPreviousRequest })\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {Object} traceOptions - time range and filter options\n   * @param {number} [options.last] - Retrieve the last N samples\n   * @param {number} [options.before] - Retrieve the samples before this timestamp\n   * @param {number} [options.after] - Retrieve the samples after this timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  get(trackingId, { last, before, after }, { token, count, pageToken }) {\n    return this.validate({ token, trackingId }, ['token', 'trackingId'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (last) { queryParameters.last = last; }\n        if (before) { queryParameters.before = before; }\n        if (after) { queryParameters.after = after; }\n        if (count) { queryParameters.count = count; }\n        if (pageToken) { queryParameters.pageToken = pageToken; }\n\n        return this.fetch(this.url('traces', 'v2', trackingId, queryParameters), {\n          method: 'get',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Remove the trace of the specified device\n   *\n   * @example\n   * const deleted = hereTracking.traces.remove('HERE-123...', { token: 'h1.123...' })\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @throws {Error} When an HTTP error has occurred\n   */\n  remove(trackingId, { token }) {\n    return this.validate({ token, trackingId }, ['token', 'trackingId'])\n      .then(() => this.fetch(this.url('traces', 'v2', trackingId), {\n        method: 'delete',\n        headers: new Headers({\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n}\n\nmodule.exports = Traces;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Access to device geofence transitions\n *\n * For more information, see:\n * https://developer.here.com/documentation/tracking/topics/traces.html\n */\nclass Transitions {\n\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string}\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Get the specified number of recent transitions.\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} last - retrieve the last N transitions\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getLastN(trackingId, last, options) {\n    return this.get(trackingId, { last }, options);\n  }\n\n  /**\n   * Get the transitions of the specified device before the given timestamp.\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} before - retrieve the transitions before this timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getBefore(trackingId, before, options) {\n    return this.get(trackingId, { before }, options);\n  }\n\n  /**\n   * Get the transitions of the specified device after the given timestamp.\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} after - retrieve the transitions after this timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getAfter(trackingId, after, options) {\n    return this.get(trackingId, { after }, options);\n  }\n\n  /**\n   * Get the transitions of the specified device between two timestamps.\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {number} before - retrieve the transitions before this timestamp\n   * @param {number} after - retrieve the transitions after this timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of traces of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getBetween(trackingId, before, after, options) {\n    return this.get(trackingId, { before, after }, options);\n  }\n\n  /**\n   * Get the transitions of the specified device\n   *\n   * @param {string} trackingId - Tracking ID of the device\n   * @param {Object} traceOptions - Object containing time range and filter options\n   * @param {number} [options.last] - retrieve the last N transitions\n   * @param {number} [options.before] - retrieve the transitions before this timestamp\n   * @param {number} [options.after] - retrieve the transitions after this timestamp\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of results per page. (maximum 1000, default 1000).\n   * @param {string} options.pageToken - Token to request 'next page' when paging.\n   * @returns {Array} History of transitions of the device\n   * @throws {Error} When an HTTP error has occurred\n   */\n  get(trackingId, { last, before, after }, { token, count, pageToken }) {\n    return this.validate({ token, trackingId }, ['token', 'trackingId'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (last) { queryParameters.last = last; }\n        if (before) { queryParameters.before = before; }\n        if (after) { queryParameters.after = after; }\n        if (count) { queryParameters.count = count; }\n        if (pageToken) { queryParameters.pageToken = pageToken; }\n\n        return this.fetch(this.url('transitions', 'v2', 'devices', trackingId, queryParameters), {\n          method: 'get',\n          credentials: 'include',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n}\n\nmodule.exports = Transitions;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Log in users, refresh access tokens and list available devices\n *\n */\nclass Users {\n\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   */\n  constructor(utils) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string}\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n  }\n\n  /**\n   * Get the list of devices for a user\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Array of device IDs\n   * @throws {Error} When an HTTP error has occurred\n   */\n  listDevices({ count, pageToken, token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        const queryParameters = {};\n\n        if (count) {\n          queryParameters.count = count;\n        }\n        if (pageToken) {\n          queryParameters.pageToken = pageToken;\n        }\n\n        return this.fetch(this.url('users', 'v2', 'devices', queryParameters), {\n          method: 'get',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        });\n      });\n  }\n\n  /**\n   * Log in user\n   *\n   * @param {string} email - User's email address\n   * @param {string} password - User's password\n   * @returns {Object} Log in response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  login(email, password) {\n    return this.validate({ email, password }, ['email', 'password'])\n      .then(() => {\n        const url = this.url('users', 'v2', 'login');\n\n        return this.fetch(url, {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify({ email, password })\n        });\n      });\n  }\n\n  /**\n   * Refresh user access token\n   *\n   * @param {string} accessToken - Expired access token\n   * @param {string} refreshToken - Token received during login\n   * @returns {Object} Log in response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  refresh(accessToken, refreshToken) {\n    return this.validate({ accessToken, refreshToken }, ['accessToken', 'refreshToken'])\n      .then(() => {\n        const url = this.url('users', 'v2', 'refresh');\n\n        return this.fetch(url, {\n          method: 'post',\n          body: JSON.stringify({ accessToken, refreshToken })\n        });\n      });\n  }\n\n  /**\n   * Retrieves application license information\n   * /registry/v2/licenses\n   *\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Array} An array contains all applications license information of the user\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getLicenseInfo({ token }) {\n    return this.validate({ token }, ['token'])\n      .then(() => this.fetch(this.url('registry', 'v2', 'licenses'),\n        {\n          method: 'get',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        }))\n      .then(json => json.licenses);\n  }\n\n  /**\n   * Get a single page of projects\n   *\n   * @param {Object} options Options containing the Authorization token and paging details\n   * @returns {Object} A page of the user's projects.\n   */\n  getProjectsPage({ token, start, end }) {\n    return this.validate({ token }, ['token'])\n      .then(() => {\n        const url = this.url('projects', 'v1', { startIndex: start, endIndex: end, role: 'PrA' });\n\n        return this.fetch(url, {\n          method: 'GET',\n          headers: new Headers({\n            Authorization: `Bearer ${token}`\n          })\n        });\n      })\n      .then(json => json);\n  }\n\n  /**\n   * Get an array of tracking projects in the user account\n   *\n   * This slurps the projects response to gather all pages.\n   *\n   * @param {Object} options Options containing the Authorization token\n   * @returns {Array} A list of the user's projects.\n   */\n  listProjects({ token }) {\n    return this.validate({ token }, ['token'])\n      .then(async () => {\n        const options = {\n          start: 0,\n          end: 100,\n          token\n        };\n\n        let projects = [];\n\n        let json = {\n          total: 1,\n          end: 0\n        };\n\n        while (json.total > json.end) {\n          json = await this.getProjectsPage(options); /* eslint-disable-line no-await-in-loop */\n          projects = projects.concat(json.projects.filter(prj => prj.type === 'tracking'));\n          options.start = json.end + 1;\n          options.end = json.end + 100;\n        }\n        return projects;\n      });\n  }\n}\n\nmodule.exports = Users;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n *\n *\n * Provision new devices.\n *\n * Create new requests for a specified number of devices, manage requests,\n * retrieve freshly minted device licences.\n *\n * For more information, see:\n * https://developer.here.com/documentation/tracking/topics/vendor.html\n */\nclass Vendor {\n\n  /**\n   * @param {Object} utils - general utilities passed from main HERETracking\n   * @param {function(varArgs: ...string): string} utils.url - Generate the URL for HERE Tracking\n   * @param {function(options: Object, required: Array): Promise} utils.validate - Check the supplied parameters\n   * @param {function(url: string, options: Object): Object} utils.fetch - Wrap the standard Fetch API\n   * (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) to provide error handling\n   * @param {function(deviceId: string, options: Object): Object} claimDevice - Reference to the device\n   * claiming method of the Devices class\n   */\n  constructor(utils, claimDevice) {\n    /**\n     * Generate the URL for HERE Tracking\n     * @type {function(varArgs: ...string): string}\n     */\n    this.url = utils.url;\n    /**\n     * Check the supplied parameters\n     * @type {function(options: Object, required: Array): Promise}\n     */\n    this.validate = utils.validate;\n    /**\n     * Wrap the standard Fetch API (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n     * to provide error handling\n     * @type {function(url: string, options: Object): Object}\n     */\n    this.fetch = utils.fetch;\n    /**\n     * Reference to the device claiming method of the Devices class\n     * @type {function(deviceId: string, options: Object): Object}\n     */\n    this.claimDevice = claimDevice;\n  }\n\n  /**\n   * Create a new request for device licences.\n   * /registry/v2/{app_ID}/devices\n   *\n   * @param {string} vendorId - Valid appId enabled for HERE Tracking\n   * @param {string} count - Number of licences to create\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {string} Request ID\n   * @throws {Error} When an HTTP error has occurred\n   */\n  requestBatch(vendorId, count, { token }) {\n    return this.validate({ vendorId, count, token }, ['vendorId', 'count', 'token'])\n      .then(() => this.fetch(this.url('registry', 'v2', vendorId, 'devices'),\n        {\n          method: 'post',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify({\n            count\n          })\n        })\n        .then(json => json.jobId)\n      );\n  }\n\n  /**\n   * Create a new request for device licences given an external ID\n   * /registry/v2/{app_ID}/devices\n   *\n   *    {\n   *      \"devices\":[{\n   *        \"id\": \"externalId1\"\n   *      }, {\n   *        \"id\": \"externalId2\"\n   *      }]\n   *.   }\n   *\n   *\n   * @param {string} vendorId - Valid appId enabled for HERE Tracking\n   * @param {Array} devices - Array of external IDs for new devices\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {string} Request ID\n   * @throws {Error} When an HTTP error has occurred\n   */\n  requestBatchExternalId(vendorId, devices, { token }) {\n    const body = {\n      devices: devices.map(deviceId => ({\n        id: deviceId\n      }))\n    };\n\n    return this.validate({ vendorId, devices, token }, ['vendorId', 'devices', 'token'])\n      .then(() => this.fetch(this.url('registry', 'v2', vendorId, 'devices'),\n        {\n          method: 'post',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }),\n          body: JSON.stringify({\n            body\n          })\n        })\n        .then(json => json.jobId)\n      );\n  }\n\n  /**\n   * Check on the status of a previous request\n   * /registry/v2/{jobId}/status\n   *\n   * @param {string} jobId - ID of the request\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the status check response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  checkBatchStatus(jobId, { token }) {\n    return this.validate({ jobId, token }, ['jobId', 'token'])\n      .then(() => this.fetch(this.url('registry', 'v2', jobId, 'status'), {\n        method: 'get',\n        headers: new Headers({\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  }\n\n  /**\n   * Get the results of a completed batch request\n   * /v2/{jobId}/results\n   *\n   * @param {string} jobId - ID of the request\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the status check response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getBatchResults(jobId, { token }) {\n    return this.validate({ jobId, token }, ['jobId', 'token'])\n      .then(() => this.fetch(this.url('registry', 'v2', jobId, 'results'), {\n        method: 'get',\n        headers: new Headers({\n          'Authorization': `Bearer ${token}`\n        })\n      }));\n  };\n\n  /**\n   * Helper function to repeatedly check batch status until the job is complete\n   *\n   * @param {string} jobId - ID of the request\n   * @param {Object} options - Object containing method options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Body of the status check response\n   * @throws {Error} When an HTTP error has occurred\n   */\n  waitForBatchResults(jobId, options) {\n    if (!this.batchTimeout) {\n      this.batchTimeout = +new Date() + 30000;\n    }\n\n    if (+new Date() > this.batchTimeout) {\n      delete this.batchTimeout;\n      return Promise.reject(new Error('Timed out retrieving batch results'));\n    }\n\n    return this.checkBatchStatus(jobId, options)\n      .then((status) => {\n        if (status.status === 'complete') {\n          delete this.batchTimeout;\n\n          return this.getBatchResults(jobId, options);\n        }\n        return new Promise(resolve => setTimeout(() => resolve(), 1000))\n          .then(() => this.waitForBatchResults(jobId, options));\n      });\n  }\n\n  /**\n   * Create device licenses.\n   *\n   * @param {string} vendorId - Valid appId enabled for HERE Tracking\n   * @param {Object} options - Object containing method options\n   * @param {string} options.token - Valid user access token\n   * @param {string} options.count - Number of licenses to create. Default is 1.\n   * @returns {Array} Device licenses\n   * @throws {Error} When an HTTP error has occurred\n   */\n  provision(vendorId, { token, count = 1 }) {\n    if (count > 100) {\n      return Promise.reject(new Error('Too many licenses requested, maximum is 100'));\n    }\n    return this.validate({ vendorId, token }, ['vendorId', 'token'])\n      .then(() => this.requestBatch(vendorId, count, { token }))\n      .then(jobId => this.waitForBatchResults(jobId, { token }))\n      .then((result) => {\n        const { data } = result || {};\n\n        if (!data || data.length === 0) {\n          return Promise.reject(new Error('No Device license created'));\n        }\n        return data;\n      });\n  }\n\n  /**\n   * Create a license and autoclaim a Device.\n   *\n   * This creates a license using a vendor account\n   * Then immediately claims it to the same account\n   * as if it were a standard user.standard\n   *\n   * Typically, this is only used for testing and development.\n   *\n   * @param {string} vendorId - Valid appId enabled for HERE Tracking\n   * @param {Object} options - Object containing method options\n   * @param {string} options.token - Valid user access token\n   *\n   * @returns {Object} Device data and trackingId\n   * @throws {Error} When an HTTP error has occurred\n   */\n  provisionAndClaim(vendorId, { token }) {\n    return this.provision(vendorId, { token })\n      .then((result = []) => {\n        const { deviceId, deviceSecret } = result[0] || {};\n\n        if (deviceId) {\n          return this.claimDevice(deviceId, { token })\n            .then(({ trackingId }) => ({ trackingId, deviceId, deviceSecret }));\n        }\n        return Promise.reject(new Error('No Device license created'));\n      });\n  }\n\n  /**\n   * Retrieves the count of already created licenses.\n   * /registry/v2/{app_ID}/licenseCount\n   *\n   * @param {string} vendorId - Valid appId enabled for HERE Tracking\n   * @param {Object} options - Object containing request options\n   * @param {string} options.token - Valid user access token\n   * @returns {Object} Object with number of created licenses\n   * @throws {Error} When an HTTP error has occurred\n   */\n  getLicenseCount(vendorId, { token }) {\n    return this.validate({ vendorId, token }, ['vendorId', 'token'])\n      .then(() => this.fetch(this.url('registry', 'v2', vendorId, 'licenseCount'),\n        {\n          method: 'get',\n          headers: new Headers({\n            'Authorization': `Bearer ${token}`\n          })\n        }))\n      .then(json => json.count);\n  }\n}\n\nmodule.exports = Vendor;\n"],"sourceRoot":""}